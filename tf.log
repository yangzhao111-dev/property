
Run terraform -chdir=./infra plan -var-file=../env/us/stage.tfvars
Acquiring state lock. This may take a few moments...
[0m[1mmodule.asg["app"].aws_iam_role.ssm: Refreshing state... [id=stage-us-app-asg-ssm][0m
[0m[1mmodule.alb["app-nodejs"].module.alb.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.alb["app-web"].module.alb.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.asg["app"].aws_iam_service_linked_role.autoscaling: Refreshing state... [id=arn:aws:iam::539247459406:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_stage-us-app-asg][0m
[0m[1mmodule.acm["stage"].module.acm.aws_acm_certificate.this[0]: Refreshing state... [id=arn:aws:acm:us-west-2:539247459406:certificate/72eb59a9-5548-473a-b38a-4be0e1c82c40][0m
[0m[1mmodule.alb["app-nodejs"].module.alb.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.alb["app-web"].module.alb.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.asg["app-web"].module.asg.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.asg["app-nodejs"].module.asg.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.asg["app-web"].module.asg.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_vpc.this[0]: Refreshing state... [id=vpc-014223eda97a12958][0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Reading...[0m[0m
[0m[1mmodule.asg["app-nodejs"].module.asg.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Reading...[0m[0m
[0m[1mmodule.vpc["app"].module.vpc.aws_vpc.this[0]: Refreshing state... [id=vpc-0bb3c37fbc7b017c9][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Read complete after 1s [id=c2b14602336c4e609129e27c7c28d8b792f116dcdffdd417249876bbe86e4fd4][0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Read complete after 1s [id=c2b14602336c4e609129e27c7c28d8b792f116dcdffdd417249876bbe86e4fd4][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Read complete after 1s [id=c2b14602336c4e609129e27c7c28d8b792f116dcdffdd417249876bbe86e4fd4][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_region.current: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_region.current: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.ec2["app-web"].module.ec2.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.ec2["app-web"].module.ec2.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_region.current: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_region.current: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Read complete after 1s [id=c2b14602336c4e609129e27c7c28d8b792f116dcdffdd417249876bbe86e4fd4][0m
[0m[1mmodule.ec2["app-bastion"].module.ec2.data.aws_partition.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_region.current: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_region.current: Reading...[0m[0m
[0m[1mmodule.ec2["app-bastion"].module.ec2.data.aws_partition.current: Read complete after 0s [id=aws][0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_region.current: Read complete after 0s [id=us-west-2][0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Read complete after 1s [id=c2b14602336c4e609129e27c7c28d8b792f116dcdffdd417249876bbe86e4fd4][0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_canonical_user_id.this[0]: Read complete after 1s [id=c2b14602336c4e609129e27c7c28d8b792f116dcdffdd417249876bbe86e4fd4][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_caller_identity.current: Reading...[0m[0m
[0m[1mmodule.asg["app-web"].module.asg.data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.asg["app-web"].module.asg.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602][0m
[0m[1mmodule.asg["app-nodejs"].module.asg.data.aws_iam_policy_document.assume_role_policy[0]: Reading...[0m[0m
[0m[1mmodule.asg["app-nodejs"].module.asg.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602][0m
[0m[1mmodule.s3_bucket["ipx_prod_sync"].module.s3_bucket.data.aws_caller_identity.current: Read complete after 1s [id=539247459406][0m
[0m[1mmodule.asg["app"].module.asg.aws_iam_role.this[0]: Refreshing state... [id=stage-us-app-asg-node][0m
[0m[1mmodule.s3_bucket["ipx_prod"].module.s3_bucket.data.aws_caller_identity.current: Read complete after 1s [id=539247459406][0m
[0m[1mmodule.asg["app"].aws_iam_instance_profile.ssm: Refreshing state... [id=stage-us-app-asg-ssm][0m
[0m[1mmodule.s3_bucket["ipx_prod_transit"].module.s3_bucket.data.aws_caller_identity.current: Read complete after 2s [id=539247459406][0m
[0m[1mmodule.s3_bucket["ipx_saleswebsite"].module.s3_bucket.data.aws_caller_identity.current: Read complete after 2s [id=539247459406][0m
[0m[1mmodule.s3_bucket["ipx_prod_backups"].module.s3_bucket.data.aws_caller_identity.current: Read complete after 2s [id=539247459406][0m
[0m[1mmodule.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.data.aws_caller_identity.current: Read complete after 1s [id=539247459406][0m
[0m[1mmodule.asg["app"].module.asg.aws_iam_role_policy_attachment.this["AmazonSSMManagedInstanceCore"]: Refreshing state... [id=stage-us-app-asg-node-20250104110126978900000001][0m
[0m[1mmodule.asg["app"].module.asg.aws_iam_instance_profile.this[0]: Refreshing state... [id=stage-us-app-asg-node][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table.public[0]: Refreshing state... [id=rtb-0e8290893e3ab294a][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table.public[0]: Refreshing state... [id=rtb-00a49d04356ec31d7][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table.private[0]: Refreshing state... [id=rtb-0a3188a11dbafb23a][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table.private[0]: Refreshing state... [id=rtb-0001aacc1c0360d69][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_internet_gateway.this[0]: Refreshing state... [id=igw-05611063db2918361][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_internet_gateway.this[0]: Refreshing state... [id=igw-099e6e34c97e539c9][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-09756a380f0767dcc][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_subnet.public[2]: Refreshing state... [id=subnet-0b19b6f70ab305e79][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-02fd1c9ad105ddd73][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_subnet.public[2]: Refreshing state... [id=subnet-065401b3f33166650][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-09ec5df6d7983a17b][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-03b51c8daf67ab43e][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-02c20ec4e8fbc2750][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-01b8ddbe2f30a7e6f][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_subnet.private[2]: Refreshing state... [id=subnet-066bf555f889cd8f3][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_subnet.private[2]: Refreshing state... [id=subnet-0aee898e10ef96421][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-05f92f1d69bfe123f][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-0917404c1cebf7892][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-05935f051dd01d319][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-050e939909c1c2128][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route.public_internet_gateway[0]: Refreshing state... [id=r-rtb-0e8290893e3ab294a1080289494][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route.public_internet_gateway[0]: Refreshing state... [id=r-rtb-00a49d04356ec31d71080289494][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-003e357e11a94e263][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-0fda3907e90b0e604][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-08870d9d982800556][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-0df8ab3ec8ce271ea][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-01139770869fd3ee6][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-08e4e432c1bd7e3f6][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-0f91cceaccac0d067][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-03f419f531c521737][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-02c9deba03612e961][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-02a04c0c6f45ffbad][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-0cd1e9a045d80ff38][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-0c852b95366743520][0m
[0m[1mmodule.vpc["mgt"].module.endpoints.data.aws_vpc_endpoint_service.this["s3"]: Reading...[0m[0m
[0m[1mmodule.vpc["app"].module.endpoints.data.aws_vpc_endpoint_service.this["dynamodb"]: Reading...[0m[0m
[0m[1mmodule.vpc["app"].module.endpoints.data.aws_vpc_endpoint_service.this["s3"]: Reading...[0m[0m
[0m[1mmodule.vpc["mgt"].module.endpoints.data.aws_vpc_endpoint_service.this["dynamodb"]: Reading...[0m[0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_nat_gateway.this[0]: Refreshing state... [id=nat-094bea0f3314c12d9][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_nat_gateway.this[0]: Refreshing state... [id=nat-0ac71045cb6c6786e][0m
[0m[1mmodule.vpc["mgt"].module.endpoints.data.aws_vpc_endpoint_service.this["s3"]: Read complete after 1s [id=526544209][0m
[0m[1mmodule.vpc["app"].module.endpoints.data.aws_vpc_endpoint_service.this["dynamodb"]: Read complete after 1s [id=3114548494][0m
[0m[1mmodule.vpc["mgt"].module.endpoints.data.aws_vpc_endpoint_service.this["dynamodb"]: Read complete after 0s [id=3114548494][0m
[0m[1mmodule.vpc["app"].module.endpoints.data.aws_vpc_endpoint_service.this["s3"]: Read complete after 0s [id=526544209][0m
[0m[1mmodule.vpc["mgt"].module.endpoints.aws_vpc_endpoint.this["s3"]: Refreshing state... [id=vpce-0a3af5fe8091aad32][0m
[0m[1mmodule.vpc["mgt"].module.endpoints.aws_vpc_endpoint.this["dynamodb"]: Refreshing state... [id=vpce-0e43dcc1f7e8a8621][0m
[0m[1mmodule.vpc["app"].module.endpoints.aws_vpc_endpoint.this["s3"]: Refreshing state... [id=vpce-02ad0427fc1434966][0m
[0m[1mmodule.vpc["app"].module.endpoints.aws_vpc_endpoint.this["dynamodb"]: Refreshing state... [id=vpce-0877f8d12a2b4fa4d][0m
[0m[1mmodule.vpc["app"].module.vpc.aws_route.private_nat_gateway[0]: Refreshing state... [id=r-rtb-0a3188a11dbafb23a1080289494][0m
[0m[1mmodule.vpc["mgt"].module.vpc.aws_route.private_nat_gateway[0]: Refreshing state... [id=r-rtb-0001aacc1c0360d691080289494][0m
[0m[1mmodule.alb["app"].module.alb.aws_security_group.this[0]: Refreshing state... [id=sg-06bab6470c1fffcb2][0m
[0m[1mmodule.alb["app"].module.alb.aws_lb_target_group.this["ex_asg"]: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796][0m
[0m[1mmodule.alb["app"].module.alb.aws_vpc_security_group_egress_rule.this["all"]: Refreshing state... [id=sgr-085c901a79035d93f][0m
[0m[1mmodule.alb["app"].module.alb.aws_vpc_security_group_ingress_rule.this["all_http"]: Refreshing state... [id=sgr-036a4589e00e9a6f1][0m
[0m[1mmodule.alb["app"].module.alb.aws_vpc_security_group_ingress_rule.this["all_https"]: Refreshing state... [id=sgr-0ba9a52c8a2579915][0m
[0m[1mmodule.alb["app"].module.alb.aws_lb.this[0]: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464][0m
[0m[1mmodule.alb["app"].module.alb.aws_lb_listener.this["ex_http"]: Refreshing state... [id=arn:aws:elasticloadbalancing:us-west-2:539247459406:listener/app/stage-us-app/adb995ce94038464/660e92c4a69c63ef][0m
[0m[1mmodule.asg["app"].aws_security_group.this: Refreshing state... [id=sg-0edc6c45b36b6687c][0m
[0m[1mmodule.asg["app"].module.asg.aws_launch_template.this[0]: Refreshing state... [id=lt-0a18366e7efd10a25][0m
[0m[1mmodule.asg["app"].module.asg.aws_autoscaling_group.idc[0]: Refreshing state... [id=stage-us-app-asg][0m
[0m[1mmodule.asg["app"].module.asg.aws_autoscaling_traffic_source_attachment.this["ex-alb"]: Refreshing state... [id=stage-us-app-asg,elbv2,arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796][0m

[1m[36mNote:[0m[1m Objects have changed outside of Terraform
[0m
Terraform detected the following changes made outside of Terraform since the
last "terraform apply" which may have affected this plan:

[1m  # module.acm["stage"].module.acm.aws_acm_certificate.this[0][0m has been deleted
[0m  [31m-[0m[0m resource "aws_acm_certificate" "this" {
      [31m-[0m[0m arn                       = "arn:aws:acm:us-west-2:539247459406:certificate/72eb59a9-5548-473a-b38a-4be0e1c82c40" [90m-> null[0m[0m
      [31m-[0m[0m domain_validation_options = [
          [31m-[0m[0m {
              [31m-[0m[0m domain_name           = "*.ipropertyexpress.com"
              [31m-[0m[0m resource_record_name  = "_fd75dbef597af30d56e794ea89e47737.ipropertyexpress.com."
              [31m-[0m[0m resource_record_type  = "CNAME"
              [31m-[0m[0m resource_record_value = "_91d5e47680764e98e6f88d9c1934fde4.zfyfvmchrl.acm-validations.aws."
            },
          [31m-[0m[0m {
              [31m-[0m[0m domain_name           = "*.stage.ipropertyexpress.com"
              [31m-[0m[0m resource_record_name  = "_38b4d2ffd4662c69f1c4719a107e966b.stage.ipropertyexpress.com."
              [31m-[0m[0m resource_record_type  = "CNAME"
              [31m-[0m[0m resource_record_value = "_f7ae747598aaae1ac79d7d714201d355.zfyfvmchrl.acm-validations.aws."
            },
        ] [90m-> null[0m[0m
        id                        = "arn:aws:acm:us-west-2:539247459406:certificate/72eb59a9-5548-473a-b38a-4be0e1c82c40"
      [31m-[0m[0m status                    = "PENDING_VALIDATION" [90m-> null[0m[0m
        tags                      = {
            "deploy:by"         = "terraform"
            "deploy:repository" = "ie-infra/ie-infra-aws-us"
            "terraform:module"  = "acm"
        }
        [90m# (14 unchanged attributes hidden)[0m[0m

        [90m# (1 unchanged block hidden)[0m[0m
    }


Unless you have made equivalent changes to your configuration, or ignored the
relevant attributes using ignore_changes, the following plan may include
actions to undo or respond to these changes.
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
  [31m-[0m destroy[0m

Terraform will perform the following actions:

[1m  # module.asg["app"].aws_iam_instance_profile.ssm[0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"] is not in configuration)
[0m  [31m-[0m[0m resource "aws_iam_instance_profile" "ssm" {
      [31m-[0m[0m arn         = "arn:aws:iam::539247459406:instance-profile/stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m create_date = "2025-01-04T11:01:26Z" [90m-> null[0m[0m
      [31m-[0m[0m id          = "stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m name        = "stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m path        = "/" [90m-> null[0m[0m
      [31m-[0m[0m role        = "stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m tags        = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all    = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id   = "AIPAX3DNHHRHLJD3HJSGV" [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.asg["app"].aws_iam_role.ssm[0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"] is not in configuration)
[0m  [31m-[0m[0m resource "aws_iam_role" "ssm" {
      [31m-[0m[0m arn                   = "arn:aws:iam::539247459406:role/stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRole"
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [31m-[0m[0m Sid       = ""
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m create_date           = "2025-01-04T11:01:25Z" [90m-> null[0m[0m
      [31m-[0m[0m force_detach_policies = false [90m-> null[0m[0m
      [31m-[0m[0m id                    = "stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m managed_policy_arns   = [] [90m-> null[0m[0m
      [31m-[0m[0m max_session_duration  = 3600 [90m-> null[0m[0m
      [31m-[0m[0m name                  = "stage-us-app-asg-ssm" [90m-> null[0m[0m
      [31m-[0m[0m path                  = "/" [90m-> null[0m[0m
      [31m-[0m[0m tags                  = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all              = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id             = "AROAX3DNHHRHBW7NSNAQZ" [90m-> null[0m[0m
        [90m# (3 unchanged attributes hidden)[0m[0m
    }

[1m  # module.asg["app"].aws_iam_service_linked_role.autoscaling[0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"] is not in configuration)
[0m  [31m-[0m[0m resource "aws_iam_service_linked_role" "autoscaling" {
      [31m-[0m[0m arn              = "arn:aws:iam::539247459406:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m aws_service_name = "autoscaling.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m create_date      = "2025-01-04T09:52:11Z" [90m-> null[0m[0m
      [31m-[0m[0m custom_suffix    = "stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m description      = "A service linked role for autoscaling" [90m-> null[0m[0m
      [31m-[0m[0m id               = "arn:aws:iam::539247459406:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m name             = "AWSServiceRoleForAutoScaling_stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m path             = "/aws-service-role/autoscaling.amazonaws.com/" [90m-> null[0m[0m
      [31m-[0m[0m tags             = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all         = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id        = "AROAX3DNHHRHEAVPFEEVQ" [90m-> null[0m[0m
    }

[1m  # module.asg["app"].aws_security_group.this[0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"] is not in configuration)
[0m  [31m-[0m[0m resource "aws_security_group" "this" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:us-west-2:539247459406:security-group/sg-0edc6c45b36b6687c" [90m-> null[0m[0m
      [31m-[0m[0m description            = "ASG node security rules" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-0edc6c45b36b6687c" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "10.21.0.0/16",
                ]
              [31m-[0m[0m description      = "SSH from Management VPC"
              [31m-[0m[0m from_port        = 22
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 22
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = "Traffic from ALB stage-us-app"
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = [
                  [31m-[0m[0m "sg-06bab6470c1fffcb2",
                ]
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = []
              [31m-[0m[0m description      = "Traffic from self stage-us-app"
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = true
              [31m-[0m[0m to_port          = 0
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "stage-us-app-asg-node-sg" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "539247459406" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name"             = "stage-us-app-asg-node-sg"
          [31m-[0m[0m "deploy:by"        = "terraform"
          [31m-[0m[0m "terraform:module" = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name"             = "stage-us-app-asg-node-sg"
          [31m-[0m[0m "deploy:by"        = "terraform"
          [31m-[0m[0m "terraform:module" = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-0bb3c37fbc7b017c9" [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.asg["app-nodejs"].aws_iam_instance_profile.ssm[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "ssm" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stage-us-app-nodejs-asg-ssm"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "stage-us-app-nodejs-asg-ssm"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # module.asg["app-nodejs"].aws_iam_role.ssm[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ssm" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = ""
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "stage-us-app-nodejs-asg-ssm"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.asg["app-nodejs"].aws_iam_service_linked_role.autoscaling[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_service_linked_role" "autoscaling" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m aws_service_name = "autoscaling.amazonaws.com"
      [32m+[0m[0m create_date      = (known after apply)
      [32m+[0m[0m custom_suffix    = "stage-us-app-nodejs-asg"
      [32m+[0m[0m description      = "A service linked role for autoscaling"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m path             = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id        = (known after apply)
    }

[1m  # module.asg["app-nodejs"].aws_security_group.this[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "ASG node security rules"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.21.0.0/16",
                ]
              [32m+[0m[0m description      = "SSH from Management VPC"
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from ALB stage-us-app-nodejs"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from self stage-us-app-nodejs"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = true
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = "stage-us-app-nodejs-asg-node-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"             = "stage-us-app-nodejs-asg-node-sg"
          [32m+[0m[0m "deploy:by"        = "terraform"
          [32m+[0m[0m "terraform:module" = "asg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"             = "stage-us-app-nodejs-asg-node-sg"
          [32m+[0m[0m "deploy:by"        = "terraform"
          [32m+[0m[0m "terraform:module" = "asg"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0bb3c37fbc7b017c9"
    }

[1m  # module.asg["app-web"].aws_iam_instance_profile.ssm[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "ssm" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stage-us-app-web-asg-ssm"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/"
      [32m+[0m[0m role        = "stage-us-app-web-asg-ssm"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # module.asg["app-web"].aws_iam_role.ssm[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "ssm" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = ""
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m force_detach_policies = false
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "stage-us-app-web-asg-ssm"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.asg["app-web"].aws_iam_service_linked_role.autoscaling[0m will be created
[0m  [32m+[0m[0m resource "aws_iam_service_linked_role" "autoscaling" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m aws_service_name = "autoscaling.amazonaws.com"
      [32m+[0m[0m create_date      = (known after apply)
      [32m+[0m[0m custom_suffix    = "stage-us-app-web-asg"
      [32m+[0m[0m description      = "A service linked role for autoscaling"
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m name             = (known after apply)
      [32m+[0m[0m path             = (known after apply)
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id        = (known after apply)
    }

[1m  # module.asg["app-web"].aws_security_group.this[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "ASG node security rules"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.21.0.0/16",
                ]
              [32m+[0m[0m description      = "SSH from Management VPC"
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from ALB stage-us-app-web"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = (known after apply)
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from self stage-us-app-web"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = true
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = "stage-us-app-web-asg-node-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"             = "stage-us-app-web-asg-node-sg"
          [32m+[0m[0m "deploy:by"        = "terraform"
          [32m+[0m[0m "terraform:module" = "asg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"             = "stage-us-app-web-asg-node-sg"
          [32m+[0m[0m "deploy:by"        = "terraform"
          [32m+[0m[0m "terraform:module" = "asg"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0bb3c37fbc7b017c9"
    }

[1m  # module.ec2["app-bastion"].aws_eip.public_ip[0][0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "public_ip" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m arn                  = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m ipam_pool_id         = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m ptr_record           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.ec2["app-bastion"].aws_security_group.this_ec2[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_ec2" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Ec2 instance security rules"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.21.0.0/16",
                ]
              [32m+[0m[0m description      = "SSH from Management VPC"
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from ALB stage-us-app-bastion"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = [
                  [32m+[0m[0m [90mnull[0m[0m,
                ]
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from self stage-us-app-bastion"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = true
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = "stage-us-app-bastion-ec2-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"              = "stage-us-app-bastion-asg-node-sg"
          [32m+[0m[0m "asg:type"          = "app-bastion"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"              = "stage-us-app-bastion-asg-node-sg"
          [32m+[0m[0m "asg:type"          = "app-bastion"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.ec2["app-web"].aws_security_group.this_ec2[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this_ec2" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Ec2 instance security rules"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.21.0.0/16",
                ]
              [32m+[0m[0m description      = "SSH from Management VPC"
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from ALB stage-us-app-web"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = [
                  [32m+[0m[0m [90mnull[0m[0m,
                ]
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = []
              [32m+[0m[0m description      = "Traffic from self stage-us-app-web"
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = true
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = "stage-us-app-web-ec2-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"              = "stage-us-app-web-asg-node-sg"
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"              = "stage-us-app-web-asg-node-sg"
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.acm["stage"].module.acm.aws_acm_certificate.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_acm_certificate" "this" {
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m domain_name               = "*.stage.ipropertyexpress.com"
      [32m+[0m[0m domain_validation_options = [
          [32m+[0m[0m {
              [32m+[0m[0m domain_name           = "*.ipropertyexpress.com"
              [32m+[0m[0m resource_record_name  = (known after apply)
              [32m+[0m[0m resource_record_type  = (known after apply)
              [32m+[0m[0m resource_record_value = (known after apply)
            },
          [32m+[0m[0m {
              [32m+[0m[0m domain_name           = "*.stage.ipropertyexpress.com"
              [32m+[0m[0m resource_record_name  = (known after apply)
              [32m+[0m[0m resource_record_type  = (known after apply)
              [32m+[0m[0m resource_record_value = (known after apply)
            },
        ]
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m key_algorithm             = (known after apply)
      [32m+[0m[0m not_after                 = (known after apply)
      [32m+[0m[0m not_before                = (known after apply)
      [32m+[0m[0m pending_renewal           = (known after apply)
      [32m+[0m[0m renewal_eligibility       = (known after apply)
      [32m+[0m[0m renewal_summary           = (known after apply)
      [32m+[0m[0m status                    = (known after apply)
      [32m+[0m[0m subject_alternative_names = [
          [32m+[0m[0m "*.ipropertyexpress.com",
          [32m+[0m[0m "*.stage.ipropertyexpress.com",
        ]
      [32m+[0m[0m tags                      = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "acm"
        }
      [32m+[0m[0m tags_all                  = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "acm"
        }
      [32m+[0m[0m type                      = (known after apply)
      [32m+[0m[0m validation_emails         = (known after apply)
      [32m+[0m[0m validation_method         = "DNS"

      [32m+[0m[0m options {
          [32m+[0m[0m certificate_transparency_logging_preference = "ENABLED"
        }
    }

[1m  # module.alb["app"].module.alb.aws_lb.this[0][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_lb" "this" {
      [31m-[0m[0m arn                                                          = "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464" [90m-> null[0m[0m
      [31m-[0m[0m arn_suffix                                                   = "app/stage-us-app/adb995ce94038464" [90m-> null[0m[0m
      [31m-[0m[0m client_keep_alive                                            = 3600 [90m-> null[0m[0m
      [31m-[0m[0m desync_mitigation_mode                                       = "defensive" [90m-> null[0m[0m
      [31m-[0m[0m dns_name                                                     = "stage-us-app-32189454.us-west-2.elb.amazonaws.com" [90m-> null[0m[0m
      [31m-[0m[0m drop_invalid_header_fields                                   = true [90m-> null[0m[0m
      [31m-[0m[0m enable_cross_zone_load_balancing                             = true [90m-> null[0m[0m
      [31m-[0m[0m enable_deletion_protection                                   = false [90m-> null[0m[0m
      [31m-[0m[0m enable_http2                                                 = true [90m-> null[0m[0m
      [31m-[0m[0m enable_tls_version_and_cipher_suite_headers                  = false [90m-> null[0m[0m
      [31m-[0m[0m enable_waf_fail_open                                         = false [90m-> null[0m[0m
      [31m-[0m[0m enable_xff_client_port                                       = false [90m-> null[0m[0m
      [31m-[0m[0m enable_zonal_shift                                           = false [90m-> null[0m[0m
      [31m-[0m[0m id                                                           = "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464" [90m-> null[0m[0m
      [31m-[0m[0m idle_timeout                                                 = 60 [90m-> null[0m[0m
      [31m-[0m[0m internal                                                     = false [90m-> null[0m[0m
      [31m-[0m[0m ip_address_type                                              = "ipv4" [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_type                                           = "application" [90m-> null[0m[0m
      [31m-[0m[0m name                                                         = "stage-us-app" [90m-> null[0m[0m
      [31m-[0m[0m preserve_host_header                                         = false [90m-> null[0m[0m
      [31m-[0m[0m security_groups                                              = [
          [31m-[0m[0m "sg-06bab6470c1fffcb2",
        ] [90m-> null[0m[0m
      [31m-[0m[0m subnets                                                      = [
          [31m-[0m[0m "subnet-02fd1c9ad105ddd73",
          [31m-[0m[0m "subnet-03b51c8daf67ab43e",
          [31m-[0m[0m "subnet-0b19b6f70ab305e79",
        ] [90m-> null[0m[0m
      [31m-[0m[0m tags                                                         = {
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                                                     = {
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                                                       = "vpc-0bb3c37fbc7b017c9" [90m-> null[0m[0m
      [31m-[0m[0m xff_header_processing_mode                                   = "append" [90m-> null[0m[0m
      [31m-[0m[0m zone_id                                                      = "Z1H1FL5HABSF5" [90m-> null[0m[0m
        [90m# (3 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m access_logs {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
            [90m# (2 unchanged attributes hidden)[0m[0m
        }

      [31m-[0m[0m connection_logs {
          [31m-[0m[0m enabled = false [90m-> null[0m[0m
            [90m# (2 unchanged attributes hidden)[0m[0m
        }

      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id            = "subnet-02fd1c9ad105ddd73" [90m-> null[0m[0m
            [90m# (4 unchanged attributes hidden)[0m[0m
        }
      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id            = "subnet-03b51c8daf67ab43e" [90m-> null[0m[0m
            [90m# (4 unchanged attributes hidden)[0m[0m
        }
      [31m-[0m[0m subnet_mapping {
          [31m-[0m[0m subnet_id            = "subnet-0b19b6f70ab305e79" [90m-> null[0m[0m
            [90m# (4 unchanged attributes hidden)[0m[0m
        }

      [31m-[0m[0m timeouts {}
    }

[1m  # module.alb["app"].module.alb.aws_lb_listener.this["ex_http"][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_lb_listener" "this" {
      [31m-[0m[0m arn               = "arn:aws:elasticloadbalancing:us-west-2:539247459406:listener/app/stage-us-app/adb995ce94038464/660e92c4a69c63ef" [90m-> null[0m[0m
      [31m-[0m[0m id                = "arn:aws:elasticloadbalancing:us-west-2:539247459406:listener/app/stage-us-app/adb995ce94038464/660e92c4a69c63ef" [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_arn = "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464" [90m-> null[0m[0m
      [31m-[0m[0m port              = 80 [90m-> null[0m[0m
      [31m-[0m[0m protocol          = "HTTP" [90m-> null[0m[0m
      [31m-[0m[0m tags              = {
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all          = {
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m

      [31m-[0m[0m default_action {
          [31m-[0m[0m order            = 1 [90m-> null[0m[0m
          [31m-[0m[0m target_group_arn = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m
          [31m-[0m[0m type             = "forward" [90m-> null[0m[0m
        }
    }

[1m  # module.alb["app"].module.alb.aws_lb_target_group.this["ex_asg"][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_lb_target_group" "this" {
      [31m-[0m[0m arn                                = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m
      [31m-[0m[0m arn_suffix                         = "targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m
      [31m-[0m[0m deregistration_delay               = "15" [90m-> null[0m[0m
      [31m-[0m[0m id                                 = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m
      [31m-[0m[0m ip_address_type                    = "ipv4" [90m-> null[0m[0m
      [31m-[0m[0m lambda_multi_value_headers_enabled = false [90m-> null[0m[0m
      [31m-[0m[0m load_balancer_arns                 = [
          [31m-[0m[0m "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464",
        ] [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_algorithm_type      = "round_robin" [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_anomaly_mitigation  = "off" [90m-> null[0m[0m
      [31m-[0m[0m load_balancing_cross_zone_enabled  = "true" [90m-> null[0m[0m
      [31m-[0m[0m name                               = "stage-us-app" [90m-> null[0m[0m
      [31m-[0m[0m port                               = 8080 [90m-> null[0m[0m
      [31m-[0m[0m protocol                           = "HTTP" [90m-> null[0m[0m
      [31m-[0m[0m protocol_version                   = "HTTP1" [90m-> null[0m[0m
      [31m-[0m[0m proxy_protocol_v2                  = false [90m-> null[0m[0m
      [31m-[0m[0m slow_start                         = 0 [90m-> null[0m[0m
      [31m-[0m[0m tags                               = {
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                           = {
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m target_type                        = "instance" [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                             = "vpc-0bb3c37fbc7b017c9" [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m

      [31m-[0m[0m health_check {
          [31m-[0m[0m enabled             = true [90m-> null[0m[0m
          [31m-[0m[0m healthy_threshold   = 5 [90m-> null[0m[0m
          [31m-[0m[0m interval            = 30 [90m-> null[0m[0m
          [31m-[0m[0m matcher             = "200" [90m-> null[0m[0m
          [31m-[0m[0m path                = "/" [90m-> null[0m[0m
          [31m-[0m[0m port                = "traffic-port" [90m-> null[0m[0m
          [31m-[0m[0m protocol            = "HTTP" [90m-> null[0m[0m
          [31m-[0m[0m timeout             = 5 [90m-> null[0m[0m
          [31m-[0m[0m unhealthy_threshold = 2 [90m-> null[0m[0m
        }

      [31m-[0m[0m stickiness {
          [31m-[0m[0m cookie_duration = 86400 [90m-> null[0m[0m
          [31m-[0m[0m enabled         = false [90m-> null[0m[0m
          [31m-[0m[0m type            = "lb_cookie" [90m-> null[0m[0m
            [90m# (1 unchanged attribute hidden)[0m[0m
        }

      [31m-[0m[0m target_failover {}

      [31m-[0m[0m target_group_health {
          [31m-[0m[0m dns_failover {
              [31m-[0m[0m minimum_healthy_targets_count      = "1" [90m-> null[0m[0m
              [31m-[0m[0m minimum_healthy_targets_percentage = "off" [90m-> null[0m[0m
            }
          [31m-[0m[0m unhealthy_state_routing {
              [31m-[0m[0m minimum_healthy_targets_count      = 1 [90m-> null[0m[0m
              [31m-[0m[0m minimum_healthy_targets_percentage = "off" [90m-> null[0m[0m
            }
        }

      [31m-[0m[0m target_health_state {}
    }

[1m  # module.alb["app"].module.alb.aws_security_group.this[0][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_security_group" "this" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:us-west-2:539247459406:security-group/sg-06bab6470c1fffcb2" [90m-> null[0m[0m
      [31m-[0m[0m description            = "Security group for stage-us-app-alb-sg application load balancer" [90m-> null[0m[0m
      [31m-[0m[0m egress                 = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "10.91.0.0/16",
                ]
              [31m-[0m[0m from_port        = 0
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "-1"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 0
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sg-06bab6470c1fffcb2" [90m-> null[0m[0m
      [31m-[0m[0m ingress                = [
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m from_port        = 443
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 443
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [31m-[0m[0m {
              [31m-[0m[0m cidr_blocks      = [
                  [31m-[0m[0m "0.0.0.0/0",
                ]
              [31m-[0m[0m from_port        = 80
              [31m-[0m[0m ipv6_cidr_blocks = []
              [31m-[0m[0m prefix_list_ids  = []
              [31m-[0m[0m protocol         = "tcp"
              [31m-[0m[0m security_groups  = []
              [31m-[0m[0m self             = false
              [31m-[0m[0m to_port          = 80
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ] [90m-> null[0m[0m
      [31m-[0m[0m name                   = "stage-us-app-alb-sg" [90m-> null[0m[0m
      [31m-[0m[0m owner_id               = "539247459406" [90m-> null[0m[0m
      [31m-[0m[0m revoke_rules_on_delete = false [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m vpc_id                 = "vpc-0bb3c37fbc7b017c9" [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.alb["app"].module.alb.aws_vpc_security_group_egress_rule.this["all"][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_vpc_security_group_egress_rule" "this" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:us-west-2:539247459406:security-group-rule/sgr-085c901a79035d93f" [90m-> null[0m[0m
      [31m-[0m[0m cidr_ipv4              = "10.91.0.0/16" [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sgr-085c901a79035d93f" [90m-> null[0m[0m
      [31m-[0m[0m ip_protocol            = "-1" [90m-> null[0m[0m
      [31m-[0m[0m security_group_id      = "sg-06bab6470c1fffcb2" [90m-> null[0m[0m
      [31m-[0m[0m security_group_rule_id = "sgr-085c901a79035d93f" [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
    }

[1m  # module.alb["app"].module.alb.aws_vpc_security_group_ingress_rule.this["all_http"][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:us-west-2:539247459406:security-group-rule/sgr-036a4589e00e9a6f1" [90m-> null[0m[0m
      [31m-[0m[0m cidr_ipv4              = "0.0.0.0/0" [90m-> null[0m[0m
      [31m-[0m[0m from_port              = 80 [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sgr-036a4589e00e9a6f1" [90m-> null[0m[0m
      [31m-[0m[0m ip_protocol            = "tcp" [90m-> null[0m[0m
      [31m-[0m[0m security_group_id      = "sg-06bab6470c1fffcb2" [90m-> null[0m[0m
      [31m-[0m[0m security_group_rule_id = "sgr-036a4589e00e9a6f1" [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m to_port                = 80 [90m-> null[0m[0m
    }

[1m  # module.alb["app"].module.alb.aws_vpc_security_group_ingress_rule.this["all_https"][0m will be [1m[31mdestroyed[0m
  # (because module.alb["app"].module.alb is not in configuration)
[0m  [31m-[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [31m-[0m[0m arn                    = "arn:aws:ec2:us-west-2:539247459406:security-group-rule/sgr-0ba9a52c8a2579915" [90m-> null[0m[0m
      [31m-[0m[0m cidr_ipv4              = "0.0.0.0/0" [90m-> null[0m[0m
      [31m-[0m[0m from_port              = 443 [90m-> null[0m[0m
      [31m-[0m[0m id                     = "sgr-0ba9a52c8a2579915" [90m-> null[0m[0m
      [31m-[0m[0m ip_protocol            = "tcp" [90m-> null[0m[0m
      [31m-[0m[0m security_group_id      = "sg-06bab6470c1fffcb2" [90m-> null[0m[0m
      [31m-[0m[0m security_group_rule_id = "sgr-0ba9a52c8a2579915" [90m-> null[0m[0m
      [31m-[0m[0m tags                   = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all               = {
          [31m-[0m[0m "Name"                  = "stage-us-app-alb-sg"
          [31m-[0m[0m "alb:type"              = "app"
          [31m-[0m[0m "deploy:by"             = "terraform"
          [31m-[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform-aws-modules" = "alb"
          [31m-[0m[0m "terraform:module"      = "alb"
        } [90m-> null[0m[0m
      [31m-[0m[0m to_port                = 443 [90m-> null[0m[0m
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_lb.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "this" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = 3600
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = true
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = (known after apply)
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "stage-us-app-nodejs"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = [
          [32m+[0m[0m "subnet-02fd1c9ad105ddd73",
          [32m+[0m[0m "subnet-03b51c8daf67ab43e",
          [32m+[0m[0m "subnet-0b19b6f70ab305e79",
        ]
      [32m+[0m[0m tags                                                         = {
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all                                                     = {
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)

      [32m+[0m[0m timeouts {}
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_lb_listener.this["ex_http"][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m load_balancer_arn        = (known after apply)
      [32m+[0m[0m port                     = 80
      [32m+[0m[0m protocol                 = "HTTP"
      [32m+[0m[0m ssl_policy               = (known after apply)
      [32m+[0m[0m tags                     = {
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all                 = {
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tcp_idle_timeout_seconds = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_lb_target_group.this["ex_asg"][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "this" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "15"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = "true"
      [32m+[0m[0m name                               = "stage-us-app-nodejs"
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 8080
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = "vpc-0bb3c37fbc7b017c9"
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for stage-us-app-nodejs-alb-sg application load balancer"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "stage-us-app-nodejs-alb-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0bb3c37fbc7b017c9"
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_vpc_security_group_egress_rule.this["all"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "10.91.0.0/16"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_vpc_security_group_ingress_rule.this["all_http"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m to_port                = 80
    }

[1m  # module.alb["app-nodejs"].module.alb.aws_vpc_security_group_ingress_rule.this["all_https"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 443
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-nodejs-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-nodejs"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m to_port                = 443
    }

[1m  # module.alb["app-web"].module.alb.aws_lb.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "this" {
      [32m+[0m[0m arn                                                          = (known after apply)
      [32m+[0m[0m arn_suffix                                                   = (known after apply)
      [32m+[0m[0m client_keep_alive                                            = 3600
      [32m+[0m[0m desync_mitigation_mode                                       = "defensive"
      [32m+[0m[0m dns_name                                                     = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                                   = true
      [32m+[0m[0m enable_deletion_protection                                   = false
      [32m+[0m[0m enable_http2                                                 = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers                  = false
      [32m+[0m[0m enable_waf_fail_open                                         = false
      [32m+[0m[0m enable_xff_client_port                                       = false
      [32m+[0m[0m enforce_security_group_inbound_rules_on_private_link_traffic = (known after apply)
      [32m+[0m[0m id                                                           = (known after apply)
      [32m+[0m[0m idle_timeout                                                 = 60
      [32m+[0m[0m internal                                                     = (known after apply)
      [32m+[0m[0m ip_address_type                                              = (known after apply)
      [32m+[0m[0m load_balancer_type                                           = "application"
      [32m+[0m[0m name                                                         = "stage-us-app-web"
      [32m+[0m[0m name_prefix                                                  = (known after apply)
      [32m+[0m[0m preserve_host_header                                         = false
      [32m+[0m[0m security_groups                                              = (known after apply)
      [32m+[0m[0m subnets                                                      = [
          [32m+[0m[0m "subnet-02fd1c9ad105ddd73",
          [32m+[0m[0m "subnet-03b51c8daf67ab43e",
          [32m+[0m[0m "subnet-0b19b6f70ab305e79",
        ]
      [32m+[0m[0m tags                                                         = {
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all                                                     = {
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m vpc_id                                                       = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                                   = "append"
      [32m+[0m[0m zone_id                                                      = (known after apply)

      [32m+[0m[0m timeouts {}
    }

[1m  # module.alb["app-web"].module.alb.aws_lb_listener.this["ex_http"][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "this" {
      [32m+[0m[0m arn                      = (known after apply)
      [32m+[0m[0m id                       = (known after apply)
      [32m+[0m[0m load_balancer_arn        = (known after apply)
      [32m+[0m[0m port                     = 80
      [32m+[0m[0m protocol                 = "HTTP"
      [32m+[0m[0m ssl_policy               = (known after apply)
      [32m+[0m[0m tags                     = {
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all                 = {
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tcp_idle_timeout_seconds = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.alb["app-web"].module.alb.aws_lb_target_group.this["ex_asg"][0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "this" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = (known after apply)
      [32m+[0m[0m deregistration_delay               = "15"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancer_arns                 = (known after apply)
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = "true"
      [32m+[0m[0m name                               = "stage-us-app-web"
      [32m+[0m[0m name_prefix                        = (known after apply)
      [32m+[0m[0m port                               = 8080
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags                               = {
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all                           = {
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = "vpc-0bb3c37fbc7b017c9"
    }

[1m  # module.alb["app-web"].module.alb.aws_security_group.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Security group for stage-us-app-web-alb-sg application load balancer"
      [32m+[0m[0m egress                 = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "stage-us-app-web-alb-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m vpc_id                 = "vpc-0bb3c37fbc7b017c9"
    }

[1m  # module.alb["app-web"].module.alb.aws_vpc_security_group_egress_rule.this["all"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_egress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "10.91.0.0/16"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "-1"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
    }

[1m  # module.alb["app-web"].module.alb.aws_vpc_security_group_ingress_rule.this["all_http"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 80
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m to_port                = 80
    }

[1m  # module.alb["app-web"].module.alb.aws_vpc_security_group_ingress_rule.this["all_https"][0m will be created
[0m  [32m+[0m[0m resource "aws_vpc_security_group_ingress_rule" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m cidr_ipv4              = "0.0.0.0/0"
      [32m+[0m[0m from_port              = 443
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ip_protocol            = "tcp"
      [32m+[0m[0m security_group_id      = (known after apply)
      [32m+[0m[0m security_group_rule_id = (known after apply)
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name"                  = "stage-us-app-web-alb-sg"
          [32m+[0m[0m "alb:type"              = "app-web"
          [32m+[0m[0m "deploy:by"             = "terraform"
          [32m+[0m[0m "deploy:repository"     = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform-aws-modules" = "alb"
          [32m+[0m[0m "terraform:module"      = "alb"
        }
      [32m+[0m[0m to_port                = 443
    }

[1m  # module.asg["app"].module.asg.aws_autoscaling_group.idc[0][0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"].module.asg is not in configuration)
[0m  [31m-[0m[0m resource "aws_autoscaling_group" "idc" {
      [31m-[0m[0m arn                              = "arn:aws:autoscaling:us-west-2:539247459406:autoScalingGroup:d7cd1ab5-27fb-4117-8b2e-4d0814224730:autoScalingGroupName/stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m availability_zones               = [
          [31m-[0m[0m "us-west-2a",
          [31m-[0m[0m "us-west-2b",
          [31m-[0m[0m "us-west-2c",
        ] [90m-> null[0m[0m
      [31m-[0m[0m capacity_rebalance               = false [90m-> null[0m[0m
      [31m-[0m[0m default_cooldown                 = 300 [90m-> null[0m[0m
      [31m-[0m[0m default_instance_warmup          = 300 [90m-> null[0m[0m
      [31m-[0m[0m desired_capacity                 = 1 [90m-> null[0m[0m
      [31m-[0m[0m enabled_metrics                  = [] [90m-> null[0m[0m
      [31m-[0m[0m force_delete                     = false [90m-> null[0m[0m
      [31m-[0m[0m force_delete_warm_pool           = false [90m-> null[0m[0m
      [31m-[0m[0m health_check_grace_period        = 300 [90m-> null[0m[0m
      [31m-[0m[0m health_check_type                = "EC2" [90m-> null[0m[0m
      [31m-[0m[0m id                               = "stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m ignore_failed_scaling_activities = false [90m-> null[0m[0m
      [31m-[0m[0m load_balancers                   = [] [90m-> null[0m[0m
      [31m-[0m[0m max_instance_lifetime            = 0 [90m-> null[0m[0m
      [31m-[0m[0m max_size                         = 1 [90m-> null[0m[0m
      [31m-[0m[0m metrics_granularity              = "1Minute" [90m-> null[0m[0m
      [31m-[0m[0m min_size                         = 1 [90m-> null[0m[0m
      [31m-[0m[0m name                             = "stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m predicted_capacity               = 0 [90m-> null[0m[0m
      [31m-[0m[0m protect_from_scale_in            = false [90m-> null[0m[0m
      [31m-[0m[0m service_linked_role_arn          = "arn:aws:iam::539247459406:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m suspended_processes              = [] [90m-> null[0m[0m
      [31m-[0m[0m target_group_arns                = [
          [31m-[0m[0m "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796",
        ] [90m-> null[0m[0m
      [31m-[0m[0m termination_policies             = [] [90m-> null[0m[0m
      [31m-[0m[0m vpc_zone_identifier              = [
          [31m-[0m[0m "subnet-01b8ddbe2f30a7e6f",
          [31m-[0m[0m "subnet-02c20ec4e8fbc2750",
          [31m-[0m[0m "subnet-066bf555f889cd8f3",
        ] [90m-> null[0m[0m
      [31m-[0m[0m wait_for_capacity_timeout        = "0" [90m-> null[0m[0m
      [31m-[0m[0m warm_pool_size                   = 0 [90m-> null[0m[0m
        [90m# (5 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m availability_zone_distribution {
          [31m-[0m[0m capacity_distribution_strategy = "balanced-best-effort" [90m-> null[0m[0m
        }

      [31m-[0m[0m instance_maintenance_policy {
          [31m-[0m[0m max_healthy_percentage = 110 [90m-> null[0m[0m
          [31m-[0m[0m min_healthy_percentage = 100 [90m-> null[0m[0m
        }

      [31m-[0m[0m instance_refresh {
          [31m-[0m[0m strategy = "Rolling" [90m-> null[0m[0m
          [31m-[0m[0m triggers = [
              [31m-[0m[0m "tag",
            ] [90m-> null[0m[0m

          [31m-[0m[0m preferences {
              [31m-[0m[0m auto_rollback                = false [90m-> null[0m[0m
              [31m-[0m[0m checkpoint_delay             = "600" [90m-> null[0m[0m
              [31m-[0m[0m checkpoint_percentages       = [
                  [31m-[0m[0m 35,
                  [31m-[0m[0m 70,
                  [31m-[0m[0m 100,
                ] [90m-> null[0m[0m
              [31m-[0m[0m instance_warmup              = "300" [90m-> null[0m[0m
              [31m-[0m[0m max_healthy_percentage       = 100 [90m-> null[0m[0m
              [31m-[0m[0m min_healthy_percentage       = 50 [90m-> null[0m[0m
              [31m-[0m[0m scale_in_protected_instances = "Ignore" [90m-> null[0m[0m
              [31m-[0m[0m skip_matching                = false [90m-> null[0m[0m
              [31m-[0m[0m standby_instances            = "Ignore" [90m-> null[0m[0m
            }
        }

      [31m-[0m[0m launch_template {
          [31m-[0m[0m id      = "lt-0a18366e7efd10a25" [90m-> null[0m[0m
          [31m-[0m[0m name    = "stage-us-app-asg-lt-20250104095219225200000004" [90m-> null[0m[0m
          [31m-[0m[0m version = "9" [90m-> null[0m[0m
        }

      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "Name" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "stage-us-app" [90m-> null[0m[0m
        }
      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "asg:type" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "app" [90m-> null[0m[0m
        }
      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "deploy:by" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "terraform" [90m-> null[0m[0m
        }
      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "deploy:repository" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "ie-infra/ie-infra-aws-us" [90m-> null[0m[0m
        }
      [31m-[0m[0m tag {
          [31m-[0m[0m key                 = "terraform:module" [90m-> null[0m[0m
          [31m-[0m[0m propagate_at_launch = true [90m-> null[0m[0m
          [31m-[0m[0m value               = "asg" [90m-> null[0m[0m
        }

      [31m-[0m[0m timeouts {}

      [31m-[0m[0m traffic_source {
          [31m-[0m[0m identifier = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m
          [31m-[0m[0m type       = "elbv2" [90m-> null[0m[0m
        }
    }

[1m  # module.asg["app"].module.asg.aws_autoscaling_traffic_source_attachment.this["ex-alb"][0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"].module.asg is not in configuration)
[0m  [31m-[0m[0m resource "aws_autoscaling_traffic_source_attachment" "this" {
      [31m-[0m[0m autoscaling_group_name = "stage-us-app-asg" [90m-> null[0m[0m
      [31m-[0m[0m id                     = "stage-us-app-asg,elbv2,arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m

      [31m-[0m[0m traffic_source {
          [31m-[0m[0m identifier = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796" [90m-> null[0m[0m
          [31m-[0m[0m type       = "elbv2" [90m-> null[0m[0m
        }
    }

[1m  # module.asg["app"].module.asg.aws_iam_instance_profile.this[0][0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"].module.asg is not in configuration)
[0m  [31m-[0m[0m resource "aws_iam_instance_profile" "this" {
      [31m-[0m[0m arn         = "arn:aws:iam::539247459406:instance-profile/ec2/stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m create_date = "2025-01-04T11:01:27Z" [90m-> null[0m[0m
      [31m-[0m[0m id          = "stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m name        = "stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m path        = "/ec2/" [90m-> null[0m[0m
      [31m-[0m[0m role        = "stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m tags        = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all    = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id   = "AIPAX3DNHHRHOTIBIJFCW" [90m-> null[0m[0m
        [90m# (1 unchanged attribute hidden)[0m[0m
    }

[1m  # module.asg["app"].module.asg.aws_iam_role.this[0][0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"].module.asg is not in configuration)
[0m  [31m-[0m[0m resource "aws_iam_role" "this" {
      [31m-[0m[0m arn                   = "arn:aws:iam::539247459406:role/ec2/stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m assume_role_policy    = jsonencode(
            {
              [31m-[0m[0m Statement = [
                  [31m-[0m[0m {
                      [31m-[0m[0m Action    = "sts:AssumeRole"
                      [31m-[0m[0m Effect    = "Allow"
                      [31m-[0m[0m Principal = {
                          [31m-[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [31m-[0m[0m Sid       = "EC2AssumeRole"
                    },
                ]
              [31m-[0m[0m Version   = "2012-10-17"
            }
        ) [90m-> null[0m[0m
      [31m-[0m[0m create_date           = "2025-01-04T11:01:26Z" [90m-> null[0m[0m
      [31m-[0m[0m description           = "IAM role for ASG node stage-us-app" [90m-> null[0m[0m
      [31m-[0m[0m force_detach_policies = true [90m-> null[0m[0m
      [31m-[0m[0m id                    = "stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m managed_policy_arns   = [
          [31m-[0m[0m "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
        ] [90m-> null[0m[0m
      [31m-[0m[0m max_session_duration  = 3600 [90m-> null[0m[0m
      [31m-[0m[0m name                  = "stage-us-app-asg-node" [90m-> null[0m[0m
      [31m-[0m[0m path                  = "/ec2/" [90m-> null[0m[0m
      [31m-[0m[0m tags                  = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all              = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m unique_id             = "AROAX3DNHHRHPI36INONB" [90m-> null[0m[0m
        [90m# (2 unchanged attributes hidden)[0m[0m
    }

[1m  # module.asg["app"].module.asg.aws_iam_role_policy_attachment.this["AmazonSSMManagedInstanceCore"][0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"].module.asg is not in configuration)
[0m  [31m-[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [31m-[0m[0m id         = "stage-us-app-asg-node-20250104110126978900000001" [90m-> null[0m[0m
      [31m-[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore" [90m-> null[0m[0m
      [31m-[0m[0m role       = "stage-us-app-asg-node" [90m-> null[0m[0m
    }

[1m  # module.asg["app"].module.asg.aws_launch_template.this[0][0m will be [1m[31mdestroyed[0m
  # (because module.asg["app"].module.asg is not in configuration)
[0m  [31m-[0m[0m resource "aws_launch_template" "this" {
      [31m-[0m[0m arn                                  = "arn:aws:ec2:us-west-2:539247459406:launch-template/lt-0a18366e7efd10a25" [90m-> null[0m[0m
      [31m-[0m[0m default_version                      = 9 [90m-> null[0m[0m
      [31m-[0m[0m description                          = "Launch template for stage-us-app" [90m-> null[0m[0m
      [31m-[0m[0m disable_api_stop                     = false [90m-> null[0m[0m
      [31m-[0m[0m disable_api_termination              = false [90m-> null[0m[0m
      [31m-[0m[0m ebs_optimized                        = "true" [90m-> null[0m[0m
      [31m-[0m[0m id                                   = "lt-0a18366e7efd10a25" [90m-> null[0m[0m
      [31m-[0m[0m image_id                             = "ami-05d38da78ce859165" [90m-> null[0m[0m
      [31m-[0m[0m instance_type                        = "t3a.nano" [90m-> null[0m[0m
      [31m-[0m[0m latest_version                       = 9 [90m-> null[0m[0m
      [31m-[0m[0m name                                 = "stage-us-app-asg-lt-20250104095219225200000004" [90m-> null[0m[0m
      [31m-[0m[0m name_prefix                          = "stage-us-app-asg-lt-" [90m-> null[0m[0m
      [31m-[0m[0m security_group_names                 = [] [90m-> null[0m[0m
      [31m-[0m[0m tags                                 = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m tags_all                             = {
          [31m-[0m[0m "asg:type"          = "app"
          [31m-[0m[0m "deploy:by"         = "terraform"
          [31m-[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [31m-[0m[0m "terraform:module"  = "asg"
        } [90m-> null[0m[0m
      [31m-[0m[0m update_default_version               = true [90m-> null[0m[0m
      [31m-[0m[0m vpc_security_group_ids               = [
          [31m-[0m[0m "sg-0edc6c45b36b6687c",
        ] [90m-> null[0m[0m
        [90m# (5 unchanged attributes hidden)[0m[0m

      [31m-[0m[0m block_device_mappings {
          [31m-[0m[0m device_name  = "/dev/sda1" [90m-> null[0m[0m
          [31m-[0m[0m no_device    = "0" [90m-> null[0m[0m
            [90m# (1 unchanged attribute hidden)[0m[0m

          [31m-[0m[0m ebs {
              [31m-[0m[0m delete_on_termination = "true" [90m-> null[0m[0m
              [31m-[0m[0m encrypted             = "true" [90m-> null[0m[0m
              [31m-[0m[0m iops                  = 0 [90m-> null[0m[0m
              [31m-[0m[0m throughput            = 0 [90m-> null[0m[0m
              [31m-[0m[0m volume_size           = 20 [90m-> null[0m[0m
              [31m-[0m[0m volume_type           = "gp3" [90m-> null[0m[0m
                [90m# (2 unchanged attributes hidden)[0m[0m
            }
        }

      [31m-[0m[0m iam_instance_profile {
          [31m-[0m[0m arn  = "arn:aws:iam::539247459406:instance-profile/ec2/stage-us-app-asg-node" [90m-> null[0m[0m
            name = [90mnull[0m[0m
        }

      [31m-[0m[0m monitoring {
          [31m-[0m[0m enabled = true [90m-> null[0m[0m
        }
    }

[1m  # module.asg["app-nodejs"].module.asg.aws_autoscaling_group.idc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "idc" {
      [32m+[0m[0m arn                              = (known after apply)
      [32m+[0m[0m availability_zones               = (known after apply)
      [32m+[0m[0m default_cooldown                 = (known after apply)
      [32m+[0m[0m default_instance_warmup          = 300
      [32m+[0m[0m desired_capacity                 = 1
      [32m+[0m[0m force_delete                     = false
      [32m+[0m[0m force_delete_warm_pool           = false
      [32m+[0m[0m health_check_grace_period        = 300
      [32m+[0m[0m health_check_type                = "EC2"
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m ignore_failed_scaling_activities = false
      [32m+[0m[0m load_balancers                   = (known after apply)
      [32m+[0m[0m max_size                         = 1
      [32m+[0m[0m metrics_granularity              = "1Minute"
      [32m+[0m[0m min_size                         = 1
      [32m+[0m[0m name                             = "stage-us-app-nodejs-asg"
      [32m+[0m[0m name_prefix                      = (known after apply)
      [32m+[0m[0m predicted_capacity               = (known after apply)
      [32m+[0m[0m protect_from_scale_in            = false
      [32m+[0m[0m service_linked_role_arn          = (known after apply)
      [32m+[0m[0m target_group_arns                = (known after apply)
      [32m+[0m[0m termination_policies             = []
      [32m+[0m[0m vpc_zone_identifier              = [
          [32m+[0m[0m "subnet-01b8ddbe2f30a7e6f",
          [32m+[0m[0m "subnet-02c20ec4e8fbc2750",
          [32m+[0m[0m "subnet-066bf555f889cd8f3",
        ]
      [32m+[0m[0m wait_for_capacity_timeout        = "0"
      [32m+[0m[0m warm_pool_size                   = (known after apply)

      [32m+[0m[0m instance_maintenance_policy {
          [32m+[0m[0m max_healthy_percentage = 110
          [32m+[0m[0m min_healthy_percentage = 100
        }

      [32m+[0m[0m instance_refresh {
          [32m+[0m[0m strategy = "Rolling"
          [32m+[0m[0m triggers = [
              [32m+[0m[0m "tag",
            ]

          [32m+[0m[0m preferences {
              [32m+[0m[0m checkpoint_delay             = "600"
              [32m+[0m[0m checkpoint_percentages       = [
                  [32m+[0m[0m 35,
                  [32m+[0m[0m 70,
                  [32m+[0m[0m 100,
                ]
              [32m+[0m[0m instance_warmup              = "300"
              [32m+[0m[0m max_healthy_percentage       = 100
              [32m+[0m[0m min_healthy_percentage       = 50
              [32m+[0m[0m scale_in_protected_instances = "Ignore"
              [32m+[0m[0m skip_matching                = false
              [32m+[0m[0m standby_instances            = "Ignore"
            }
        }

      [32m+[0m[0m launch_template {
          [32m+[0m[0m id      = (known after apply)
          [32m+[0m[0m name    = (known after apply)
          [32m+[0m[0m version = (known after apply)
        }

      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "Name"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "stage-us-app-nodejs"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "asg:type"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "app-nodejs"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "deploy:by"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "terraform"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "deploy:repository"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "terraform:module"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "asg"
        }

      [32m+[0m[0m timeouts {}
    }

[1m  # module.asg["app-nodejs"].module.asg.aws_autoscaling_traffic_source_attachment.this["ex-alb"][0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_traffic_source_attachment" "this" {
      [32m+[0m[0m autoscaling_group_name = (known after apply)
      [32m+[0m[0m id                     = (known after apply)

      [32m+[0m[0m traffic_source {
          [32m+[0m[0m identifier = (known after apply)
          [32m+[0m[0m type       = "elbv2"
        }
    }

[1m  # module.asg["app-nodejs"].module.asg.aws_iam_instance_profile.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "this" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stage-us-app-nodejs-asg-node"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/ec2/"
      [32m+[0m[0m role        = "stage-us-app-nodejs-asg-node"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # module.asg["app-nodejs"].module.asg.aws_iam_role.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "EC2AssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m description           = "IAM role for ASG node stage-us-app-nodejs"
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "stage-us-app-nodejs-asg-node"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/ec2/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.asg["app-nodejs"].module.asg.aws_iam_role_policy_attachment.this["AmazonSSMManagedInstanceCore"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m[0m role       = "stage-us-app-nodejs-asg-node"
    }

[1m  # module.asg["app-nodejs"].module.asg.aws_launch_template.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_launch_template" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_version        = (known after apply)
      [32m+[0m[0m description            = "Launch template for stage-us-app-nodejs"
      [32m+[0m[0m ebs_optimized          = "true"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m image_id               = "ami-0e32864a4910bd3a9"
      [32m+[0m[0m instance_type          = "t3.medium"
      [32m+[0m[0m key_name               = "instance-access-key"
      [32m+[0m[0m latest_version         = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "stage-us-app-nodejs-asg-lt-"
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "asg:type"          = "app-nodejs"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m update_default_version = true
      [32m+[0m[0m vpc_security_group_ids = (known after apply)

      [32m+[0m[0m block_device_mappings {
          [32m+[0m[0m device_name = "/dev/sda1"
          [32m+[0m[0m no_device   = "0"

          [32m+[0m[0m ebs {
              [32m+[0m[0m delete_on_termination = "true"
              [32m+[0m[0m encrypted             = "true"
              [32m+[0m[0m iops                  = (known after apply)
              [32m+[0m[0m throughput            = (known after apply)
              [32m+[0m[0m volume_size           = 30
              [32m+[0m[0m volume_type           = "gp3"
            }
        }

      [32m+[0m[0m monitoring {
          [32m+[0m[0m enabled = true
        }
    }

[1m  # module.asg["app-web"].module.asg.aws_autoscaling_group.idc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "idc" {
      [32m+[0m[0m arn                              = (known after apply)
      [32m+[0m[0m availability_zones               = (known after apply)
      [32m+[0m[0m default_cooldown                 = (known after apply)
      [32m+[0m[0m default_instance_warmup          = 300
      [32m+[0m[0m desired_capacity                 = 1
      [32m+[0m[0m force_delete                     = false
      [32m+[0m[0m force_delete_warm_pool           = false
      [32m+[0m[0m health_check_grace_period        = 300
      [32m+[0m[0m health_check_type                = "EC2"
      [32m+[0m[0m id                               = (known after apply)
      [32m+[0m[0m ignore_failed_scaling_activities = false
      [32m+[0m[0m load_balancers                   = (known after apply)
      [32m+[0m[0m max_size                         = 1
      [32m+[0m[0m metrics_granularity              = "1Minute"
      [32m+[0m[0m min_size                         = 1
      [32m+[0m[0m name                             = "stage-us-app-web-asg"
      [32m+[0m[0m name_prefix                      = (known after apply)
      [32m+[0m[0m predicted_capacity               = (known after apply)
      [32m+[0m[0m protect_from_scale_in            = false
      [32m+[0m[0m service_linked_role_arn          = (known after apply)
      [32m+[0m[0m target_group_arns                = (known after apply)
      [32m+[0m[0m termination_policies             = []
      [32m+[0m[0m vpc_zone_identifier              = [
          [32m+[0m[0m "subnet-01b8ddbe2f30a7e6f",
          [32m+[0m[0m "subnet-02c20ec4e8fbc2750",
          [32m+[0m[0m "subnet-066bf555f889cd8f3",
        ]
      [32m+[0m[0m wait_for_capacity_timeout        = "0"
      [32m+[0m[0m warm_pool_size                   = (known after apply)

      [32m+[0m[0m instance_maintenance_policy {
          [32m+[0m[0m max_healthy_percentage = 110
          [32m+[0m[0m min_healthy_percentage = 100
        }

      [32m+[0m[0m instance_refresh {
          [32m+[0m[0m strategy = "Rolling"
          [32m+[0m[0m triggers = [
              [32m+[0m[0m "tag",
            ]

          [32m+[0m[0m preferences {
              [32m+[0m[0m checkpoint_delay             = "600"
              [32m+[0m[0m checkpoint_percentages       = [
                  [32m+[0m[0m 35,
                  [32m+[0m[0m 70,
                  [32m+[0m[0m 100,
                ]
              [32m+[0m[0m instance_warmup              = "300"
              [32m+[0m[0m max_healthy_percentage       = 100
              [32m+[0m[0m min_healthy_percentage       = 50
              [32m+[0m[0m scale_in_protected_instances = "Ignore"
              [32m+[0m[0m skip_matching                = false
              [32m+[0m[0m standby_instances            = "Ignore"
            }
        }

      [32m+[0m[0m launch_template {
          [32m+[0m[0m id      = (known after apply)
          [32m+[0m[0m name    = (known after apply)
          [32m+[0m[0m version = (known after apply)
        }

      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "Name"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "stage-us-app-web"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "asg:type"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "app-web"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "deploy:by"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "terraform"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "deploy:repository"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tag {
          [32m+[0m[0m key                 = "terraform:module"
          [32m+[0m[0m propagate_at_launch = true
          [32m+[0m[0m value               = "asg"
        }

      [32m+[0m[0m timeouts {}
    }

[1m  # module.asg["app-web"].module.asg.aws_autoscaling_traffic_source_attachment.this["ex-alb"][0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_traffic_source_attachment" "this" {
      [32m+[0m[0m autoscaling_group_name = (known after apply)
      [32m+[0m[0m id                     = (known after apply)

      [32m+[0m[0m traffic_source {
          [32m+[0m[0m identifier = (known after apply)
          [32m+[0m[0m type       = "elbv2"
        }
    }

[1m  # module.asg["app-web"].module.asg.aws_iam_instance_profile.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_instance_profile" "this" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m create_date = (known after apply)
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "stage-us-app-web-asg-node"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m path        = "/ec2/"
      [32m+[0m[0m role        = "stage-us-app-web-asg-node"
      [32m+[0m[0m tags        = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all    = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id   = (known after apply)
    }

[1m  # module.asg["app-web"].module.asg.aws_iam_role.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role" "this" {
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m assume_role_policy    = jsonencode(
            {
              [32m+[0m[0m Statement = [
                  [32m+[0m[0m {
                      [32m+[0m[0m Action    = "sts:AssumeRole"
                      [32m+[0m[0m Effect    = "Allow"
                      [32m+[0m[0m Principal = {
                          [32m+[0m[0m Service = "ec2.amazonaws.com"
                        }
                      [32m+[0m[0m Sid       = "EC2AssumeRole"
                    },
                ]
              [32m+[0m[0m Version   = "2012-10-17"
            }
        )
      [32m+[0m[0m create_date           = (known after apply)
      [32m+[0m[0m description           = "IAM role for ASG node stage-us-app-web"
      [32m+[0m[0m force_detach_policies = true
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m managed_policy_arns   = (known after apply)
      [32m+[0m[0m max_session_duration  = 3600
      [32m+[0m[0m name                  = "stage-us-app-web-asg-node"
      [32m+[0m[0m name_prefix           = (known after apply)
      [32m+[0m[0m path                  = "/ec2/"
      [32m+[0m[0m tags                  = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all              = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m unique_id             = (known after apply)
    }

[1m  # module.asg["app-web"].module.asg.aws_iam_role_policy_attachment.this["AmazonSSMManagedInstanceCore"][0m will be created
[0m  [32m+[0m[0m resource "aws_iam_role_policy_attachment" "this" {
      [32m+[0m[0m id         = (known after apply)
      [32m+[0m[0m policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
      [32m+[0m[0m role       = "stage-us-app-web-asg-node"
    }

[1m  # module.asg["app-web"].module.asg.aws_launch_template.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_launch_template" "this" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_version        = (known after apply)
      [32m+[0m[0m description            = "Launch template for stage-us-app-web"
      [32m+[0m[0m ebs_optimized          = "true"
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m image_id               = "ami-0e32864a4910bd3a9"
      [32m+[0m[0m instance_type          = "t3.medium"
      [32m+[0m[0m key_name               = "instance-access-key"
      [32m+[0m[0m latest_version         = (known after apply)
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = "stage-us-app-web-asg-lt-"
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "terraform:module"  = "asg"
        }
      [32m+[0m[0m update_default_version = true
      [32m+[0m[0m vpc_security_group_ids = (known after apply)

      [32m+[0m[0m block_device_mappings {
          [32m+[0m[0m device_name = "/dev/sda1"
          [32m+[0m[0m no_device   = "0"

          [32m+[0m[0m ebs {
              [32m+[0m[0m delete_on_termination = "true"
              [32m+[0m[0m encrypted             = "true"
              [32m+[0m[0m iops                  = (known after apply)
              [32m+[0m[0m throughput            = (known after apply)
              [32m+[0m[0m volume_size           = 30
              [32m+[0m[0m volume_type           = "gp3"
            }
        }

      [32m+[0m[0m monitoring {
          [32m+[0m[0m enabled = true
        }
    }

[1m  # module.ec2["app-bastion"].module.ec2.aws_instance.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "this" {
      [32m+[0m[0m ami                                  = "ami-0e32864a4910bd3a9"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = true
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t3.medium"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "instance-access-key"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-09ec5df6d7983a17b"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"              = "stage-us-app-bastion-ec2"
          [32m+[0m[0m "asg:type"          = "app-bastion"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"              = "stage-us-app-bastion-ec2"
          [32m+[0m[0m "asg:type"          = "app-bastion"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m volume_tags                          = {
          [32m+[0m[0m "Name" = "stage-us-app-bastion-ec2"
        }
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m credit_specification {}

      [32m+[0m[0m enclave_options {
          [32m+[0m[0m enabled = (known after apply)
        }

      [32m+[0m[0m metadata_options {
          [32m+[0m[0m http_endpoint               = "enabled"
          [32m+[0m[0m http_protocol_ipv6          = "disabled"
          [32m+[0m[0m http_put_response_hop_limit = 1
          [32m+[0m[0m http_tokens                 = "optional"
          [32m+[0m[0m instance_metadata_tags      = (known after apply)
        }

      [32m+[0m[0m timeouts {}
    }

[1m  # module.ec2["app-web"].module.ec2.aws_instance.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "this" {
      [32m+[0m[0m ami                                  = "ami-0e32864a4910bd3a9"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = false
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m enable_primary_ipv6                  = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t3.medium"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "instance-access-key"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = "subnet-02c20ec4e8fbc2750"
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name"              = "stage-us-app-web-ec2"
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name"              = "stage-us-app-web-ec2"
          [32m+[0m[0m "asg:type"          = "app-web"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m volume_tags                          = {
          [32m+[0m[0m "Name" = "stage-us-app-web-ec2"
        }
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)

      [32m+[0m[0m credit_specification {}

      [32m+[0m[0m enclave_options {
          [32m+[0m[0m enabled = (known after apply)
        }

      [32m+[0m[0m metadata_options {
          [32m+[0m[0m http_endpoint               = "enabled"
          [32m+[0m[0m http_protocol_ipv6          = "disabled"
          [32m+[0m[0m http_put_response_hop_limit = 1
          [32m+[0m[0m http_tokens                 = "optional"
          [32m+[0m[0m instance_metadata_tags      = (known after apply)
        }

      [32m+[0m[0m timeouts {}
    }

[1m  # module.s3_bucket["ipx_prod"].module.s3_bucket.aws_s3_bucket.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "ipx.prod"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = false
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod"].module.s3_bucket.aws_s3_bucket_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_acl" "this" {
      [32m+[0m[0m acl    = "private"
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod"].module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "this" {
      [32m+[0m[0m bucket                                 = (known after apply)
      [32m+[0m[0m id                                     = (known after apply)
      [32m+[0m[0m transition_default_minimum_object_size = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "TransitionToAI2018"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 0
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
            }

          [32m+[0m[0m transition {
              [32m+[0m[0m days          = 30
              [32m+[0m[0m storage_class = "STANDARD_IA"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "sqs-delete"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 1
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
              [32m+[0m[0m prefix = "sqs/"
            }
        }
    }

[1m  # module.s3_bucket["ipx_prod"].module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.s3_bucket["ipx_prod_backups"].module.s3_bucket.aws_s3_bucket.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "ipx.prod.backups"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = false
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_backups"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_backups"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_backups"].module.s3_bucket.aws_s3_bucket_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_acl" "this" {
      [32m+[0m[0m acl    = "private"
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_backups"].module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "this" {
      [32m+[0m[0m bucket                                 = (known after apply)
      [32m+[0m[0m id                                     = (known after apply)
      [32m+[0m[0m transition_default_minimum_object_size = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "DB Backup.DeleteAfter7days"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 7
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
              [32m+[0m[0m prefix = "db.backups/"
            }
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "db.storage.Del14Days"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 14
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
              [32m+[0m[0m prefix = "db.storage.backups/"
            }
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "Glacier"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 0
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
              [32m+[0m[0m prefix = "Glacier/"
            }

          [32m+[0m[0m transition {
              [32m+[0m[0m days          = 2
              [32m+[0m[0m storage_class = "DEEP_ARCHIVE"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "misc to one zone IA"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 0
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
              [32m+[0m[0m prefix = "misc/"
            }

          [32m+[0m[0m transition {
              [32m+[0m[0m days          = 30
              [32m+[0m[0m storage_class = "ONEZONE_IA"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.s3_bucket["ipx_prod_backups"].module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.aws_s3_bucket.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "ipx.prod.cldfiles"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = false
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_cldfiles"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_cldfiles"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.aws_s3_bucket_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_acl" "this" {
      [32m+[0m[0m acl    = "private"
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "this" {
      [32m+[0m[0m bucket                                 = (known after apply)
      [32m+[0m[0m id                                     = (known after apply)
      [32m+[0m[0m transition_default_minimum_object_size = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "TransitionToAI"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 0
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
            }

          [32m+[0m[0m transition {
              [32m+[0m[0m days          = 30
              [32m+[0m[0m storage_class = "STANDARD_IA"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.s3_bucket["ipx_prod_cldfiles"].module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.s3_bucket["ipx_prod_sync"].module.s3_bucket.aws_s3_bucket.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "ipx.prod.sync"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = false
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_sync"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_sync"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_sync"].module.s3_bucket.aws_s3_bucket_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_acl" "this" {
      [32m+[0m[0m acl    = "private"
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_sync"].module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "this" {
      [32m+[0m[0m bucket                                 = (known after apply)
      [32m+[0m[0m id                                     = (known after apply)
      [32m+[0m[0m transition_default_minimum_object_size = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "auto-delete-after-30-days"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 30
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
            }
        }
    }

[1m  # module.s3_bucket["ipx_prod_sync"].module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.s3_bucket["ipx_prod_transit"].module.s3_bucket.aws_s3_bucket.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "ipx.prod.transit"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = false
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_transit"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_prod_transit"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_transit"].module.s3_bucket.aws_s3_bucket_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_acl" "this" {
      [32m+[0m[0m acl    = "private"
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
    }

[1m  # module.s3_bucket["ipx_prod_transit"].module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "this" {
      [32m+[0m[0m bucket                                 = (known after apply)
      [32m+[0m[0m id                                     = (known after apply)
      [32m+[0m[0m transition_default_minimum_object_size = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "auto-delete-after-200-days"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 200
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
            }
        }
    }

[1m  # module.s3_bucket["ipx_prod_transit"].module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1m  # module.s3_bucket["ipx_saleswebsite"].module.s3_bucket.aws_s3_bucket.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket" "this" {
      [32m+[0m[0m acceleration_status         = (known after apply)
      [32m+[0m[0m acl                         = (known after apply)
      [32m+[0m[0m arn                         = (known after apply)
      [32m+[0m[0m bucket                      = "ipx.saleswebsite"
      [32m+[0m[0m bucket_domain_name          = (known after apply)
      [32m+[0m[0m bucket_prefix               = (known after apply)
      [32m+[0m[0m bucket_regional_domain_name = (known after apply)
      [32m+[0m[0m force_destroy               = false
      [32m+[0m[0m hosted_zone_id              = (known after apply)
      [32m+[0m[0m id                          = (known after apply)
      [32m+[0m[0m object_lock_enabled         = false
      [32m+[0m[0m policy                      = (known after apply)
      [32m+[0m[0m region                      = (known after apply)
      [32m+[0m[0m request_payer               = (known after apply)
      [32m+[0m[0m tags                        = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_saleswebsite"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m tags_all                    = {
          [32m+[0m[0m "deploy:by"         = "terraform"
          [32m+[0m[0m "deploy:repository" = "ie-infra/ie-infra-aws-us"
          [32m+[0m[0m "s3_bucket:type"    = "ipx_saleswebsite"
          [32m+[0m[0m "terraform:module"  = "s3"
        }
      [32m+[0m[0m website_domain              = (known after apply)
      [32m+[0m[0m website_endpoint            = (known after apply)
    }

[1m  # module.s3_bucket["ipx_saleswebsite"].module.s3_bucket.aws_s3_bucket_acl.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_acl" "this" {
      [32m+[0m[0m acl    = "private"
      [32m+[0m[0m bucket = (known after apply)
      [32m+[0m[0m id     = (known after apply)
    }

[1m  # module.s3_bucket["ipx_saleswebsite"].module.s3_bucket.aws_s3_bucket_lifecycle_configuration.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_lifecycle_configuration" "this" {
      [32m+[0m[0m bucket                                 = (known after apply)
      [32m+[0m[0m id                                     = (known after apply)
      [32m+[0m[0m transition_default_minimum_object_size = (known after apply)

      [32m+[0m[0m rule {
          [32m+[0m[0m id     = "TransitionToAI2018"
          [32m+[0m[0m status = "Enabled"

          [32m+[0m[0m expiration {
              [32m+[0m[0m days                         = 0
              [32m+[0m[0m expired_object_delete_marker = (known after apply)
            }

          [32m+[0m[0m filter {
            }

          [32m+[0m[0m transition {
              [32m+[0m[0m days          = 30
              [32m+[0m[0m storage_class = "STANDARD_IA"
                [90m# (1 unchanged attribute hidden)[0m[0m
            }
        }
    }

[1m  # module.s3_bucket["ipx_saleswebsite"].module.s3_bucket.aws_s3_bucket_public_access_block.this[0][0m will be created
[0m  [32m+[0m[0m resource "aws_s3_bucket_public_access_block" "this" {
      [32m+[0m[0m block_public_acls       = true
      [32m+[0m[0m block_public_policy     = true
      [32m+[0m[0m bucket                  = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ignore_public_acls      = true
      [32m+[0m[0m restrict_public_buckets = true
    }

[1mPlan:[0m 64 to add, 0 to change, 17 to destroy.
[0m
Changes to Outputs:
  [33m~[0m[0m acm                 = {
      [33m~[0m[0m stage = {
          [33m~[0m[0m acm_certificate_arn                       = "arn:aws:acm:us-west-2:539247459406:certificate/72eb59a9-5548-473a-b38a-4be0e1c82c40" -> (known after apply)
          [33m~[0m[0m acm_certificate_domain_validation_options = [
              [31m-[0m[0m {
                  [31m-[0m[0m domain_name           = "*.ipropertyexpress.com"
                  [31m-[0m[0m resource_record_name  = "_fd75dbef597af30d56e794ea89e47737.ipropertyexpress.com."
                  [31m-[0m[0m resource_record_type  = "CNAME"
                  [31m-[0m[0m resource_record_value = "_91d5e47680764e98e6f88d9c1934fde4.zfyfvmchrl.acm-validations.aws."
                },
              [31m-[0m[0m {
                  [31m-[0m[0m domain_name           = "*.stage.ipropertyexpress.com"
                  [31m-[0m[0m resource_record_name  = "_38b4d2ffd4662c69f1c4719a107e966b.stage.ipropertyexpress.com."
                  [31m-[0m[0m resource_record_type  = "CNAME"
                  [31m-[0m[0m resource_record_value = "_f7ae747598aaae1ac79d7d714201d355.zfyfvmchrl.acm-validations.aws."
                },
            ] -> (known after apply)
          [33m~[0m[0m acm_certificate_status                    = "PENDING_VALIDATION" -> (known after apply)
          [33m~[0m[0m acm_certificate_validation_emails         = [] -> (known after apply)
          [33m~[0m[0m validation_domains                        = [
              [31m-[0m[0m {
                  [31m-[0m[0m domain_name           = "ipropertyexpress.com"
                  [31m-[0m[0m resource_record_name  = "_fd75dbef597af30d56e794ea89e47737.ipropertyexpress.com."
                  [31m-[0m[0m resource_record_type  = "CNAME"
                  [31m-[0m[0m resource_record_value = "_91d5e47680764e98e6f88d9c1934fde4.zfyfvmchrl.acm-validations.aws."
                },
              [31m-[0m[0m {
                  [31m-[0m[0m domain_name           = "stage.ipropertyexpress.com"
                  [31m-[0m[0m resource_record_name  = "_38b4d2ffd4662c69f1c4719a107e966b.stage.ipropertyexpress.com."
                  [31m-[0m[0m resource_record_type  = "CNAME"
                  [31m-[0m[0m resource_record_value = "_f7ae747598aaae1ac79d7d714201d355.zfyfvmchrl.acm-validations.aws."
                },
            ] -> (known after apply)
            [90m# (2 unchanged attributes hidden)[0m[0m
        }
    }
  [33m~[0m[0m alb                 = {
      [31m-[0m[0m app        = {
          [31m-[0m[0m arn                = "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464"
          [31m-[0m[0m arn_suffix         = "app/stage-us-app/adb995ce94038464"
          [31m-[0m[0m dns_name           = "stage-us-app-32189454.us-west-2.elb.amazonaws.com"
          [31m-[0m[0m id                 = "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464"
          [31m-[0m[0m listener_rules     = {}
          [31m-[0m[0m listeners          = {
              [31m-[0m[0m ex_http = {
                  [31m-[0m[0m alpn_policy              = [90mnull[0m[0m
                  [31m-[0m[0m arn                      = "arn:aws:elasticloadbalancing:us-west-2:539247459406:listener/app/stage-us-app/adb995ce94038464/660e92c4a69c63ef"
                  [31m-[0m[0m certificate_arn          = [90mnull[0m[0m
                  [31m-[0m[0m default_action           = [
                      [31m-[0m[0m {
                          [31m-[0m[0m authenticate_cognito = []
                          [31m-[0m[0m authenticate_oidc    = []
                          [31m-[0m[0m fixed_response       = []
                          [31m-[0m[0m forward              = []
                          [31m-[0m[0m order                = 1
                          [31m-[0m[0m redirect             = []
                          [31m-[0m[0m target_group_arn     = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796"
                          [31m-[0m[0m type                 = "forward"
                        },
                    ]
                  [31m-[0m[0m id                       = "arn:aws:elasticloadbalancing:us-west-2:539247459406:listener/app/stage-us-app/adb995ce94038464/660e92c4a69c63ef"
                  [31m-[0m[0m load_balancer_arn        = "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464"
                  [31m-[0m[0m mutual_authentication    = []
                  [31m-[0m[0m port                     = 80
                  [31m-[0m[0m protocol                 = "HTTP"
                  [31m-[0m[0m ssl_policy               = ""
                  [31m-[0m[0m tags                     = {
                      [31m-[0m[0m "alb:type"            = "app"
                      [31m-[0m[0m "deploy:by"           = "terraform"
                      [31m-[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [31m-[0m[0m terraform-aws-modules = "alb"
                      [31m-[0m[0m "terraform:module"    = "alb"
                    }
                  [31m-[0m[0m tags_all                 = {
                      [31m-[0m[0m "alb:type"            = "app"
                      [31m-[0m[0m "deploy:by"           = "terraform"
                      [31m-[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [31m-[0m[0m terraform-aws-modules = "alb"
                      [31m-[0m[0m "terraform:module"    = "alb"
                    }
                  [31m-[0m[0m tcp_idle_timeout_seconds = [90mnull[0m[0m
                  [31m-[0m[0m timeouts                 = [90mnull[0m[0m
                }
            }
          [31m-[0m[0m route53_records    = {}
          [31m-[0m[0m security_group_arn = "arn:aws:ec2:us-west-2:539247459406:security-group/sg-06bab6470c1fffcb2"
          [31m-[0m[0m security_group_id  = "sg-06bab6470c1fffcb2"
          [31m-[0m[0m target_groups      = {
              [31m-[0m[0m ex_asg = {
                  [31m-[0m[0m arn                                = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796"
                  [31m-[0m[0m arn_suffix                         = "targetgroup/stage-us-app/557d879b77d78796"
                  [31m-[0m[0m connection_termination             = [90mnull[0m[0m
                  [31m-[0m[0m deregistration_delay               = "15"
                  [31m-[0m[0m health_check                       = [
                      [31m-[0m[0m {
                          [31m-[0m[0m enabled             = true
                          [31m-[0m[0m healthy_threshold   = 5
                          [31m-[0m[0m interval            = 30
                          [31m-[0m[0m matcher             = "200"
                          [31m-[0m[0m path                = "/"
                          [31m-[0m[0m port                = "traffic-port"
                          [31m-[0m[0m protocol            = "HTTP"
                          [31m-[0m[0m timeout             = 5
                          [31m-[0m[0m unhealthy_threshold = 2
                        },
                    ]
                  [31m-[0m[0m id                                 = "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796"
                  [31m-[0m[0m ip_address_type                    = "ipv4"
                  [31m-[0m[0m lambda_multi_value_headers_enabled = false
                  [31m-[0m[0m load_balancer_arns                 = [
                      [31m-[0m[0m "arn:aws:elasticloadbalancing:us-west-2:539247459406:loadbalancer/app/stage-us-app/adb995ce94038464",
                    ]
                  [31m-[0m[0m load_balancing_algorithm_type      = "round_robin"
                  [31m-[0m[0m load_balancing_anomaly_mitigation  = "off"
                  [31m-[0m[0m load_balancing_cross_zone_enabled  = "true"
                  [31m-[0m[0m name                               = "stage-us-app"
                  [31m-[0m[0m name_prefix                        = ""
                  [31m-[0m[0m port                               = 8080
                  [31m-[0m[0m preserve_client_ip                 = [90mnull[0m[0m
                  [31m-[0m[0m protocol                           = "HTTP"
                  [31m-[0m[0m protocol_version                   = "HTTP1"
                  [31m-[0m[0m proxy_protocol_v2                  = false
                  [31m-[0m[0m slow_start                         = 0
                  [31m-[0m[0m stickiness                         = [
                      [31m-[0m[0m {
                          [31m-[0m[0m cookie_duration = 86400
                          [31m-[0m[0m cookie_name     = ""
                          [31m-[0m[0m enabled         = false
                          [31m-[0m[0m type            = "lb_cookie"
                        },
                    ]
                  [31m-[0m[0m tags                               = {
                      [31m-[0m[0m "alb:type"            = "app"
                      [31m-[0m[0m "deploy:by"           = "terraform"
                      [31m-[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [31m-[0m[0m terraform-aws-modules = "alb"
                      [31m-[0m[0m "terraform:module"    = "alb"
                    }
                  [31m-[0m[0m tags_all                           = {
                      [31m-[0m[0m "alb:type"            = "app"
                      [31m-[0m[0m "deploy:by"           = "terraform"
                      [31m-[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [31m-[0m[0m terraform-aws-modules = "alb"
                      [31m-[0m[0m "terraform:module"    = "alb"
                    }
                  [31m-[0m[0m target_failover                    = [
                      [31m-[0m[0m {
                          [31m-[0m[0m on_deregistration = [90mnull[0m[0m
                          [31m-[0m[0m on_unhealthy      = [90mnull[0m[0m
                        },
                    ]
                  [31m-[0m[0m target_group_health                = [
                      [31m-[0m[0m {
                          [31m-[0m[0m dns_failover            = [
                              [31m-[0m[0m {
                                  [31m-[0m[0m minimum_healthy_targets_count      = "1"
                                  [31m-[0m[0m minimum_healthy_targets_percentage = "off"
                                },
                            ]
                          [31m-[0m[0m unhealthy_state_routing = [
                              [31m-[0m[0m {
                                  [31m-[0m[0m minimum_healthy_targets_count      = 1
                                  [31m-[0m[0m minimum_healthy_targets_percentage = "off"
                                },
                            ]
                        },
                    ]
                  [31m-[0m[0m target_health_state                = [
                      [31m-[0m[0m {
                          [31m-[0m[0m enable_unhealthy_connection_termination = [90mnull[0m[0m
                          [31m-[0m[0m unhealthy_draining_interval             = [90mnull[0m[0m
                        },
                    ]
                  [31m-[0m[0m target_type                        = "instance"
                  [31m-[0m[0m vpc_id                             = "vpc-0bb3c37fbc7b017c9"
                }
            }
          [31m-[0m[0m zone_id            = "Z1H1FL5HABSF5"
        }
      [32m+[0m[0m app-nodejs = {
          [32m+[0m[0m arn                = (known after apply)
          [32m+[0m[0m arn_suffix         = (known after apply)
          [32m+[0m[0m dns_name           = (known after apply)
          [32m+[0m[0m id                 = (known after apply)
          [32m+[0m[0m listener_rules     = {}
          [32m+[0m[0m listeners          = {
              [32m+[0m[0m ex_http = {
                  [32m+[0m[0m alpn_policy              = [90mnull[0m[0m
                  [32m+[0m[0m arn                      = (known after apply)
                  [32m+[0m[0m certificate_arn          = [90mnull[0m[0m
                  [32m+[0m[0m default_action           = [
                      [32m+[0m[0m {
                          [32m+[0m[0m authenticate_cognito = []
                          [32m+[0m[0m authenticate_oidc    = []
                          [32m+[0m[0m fixed_response       = []
                          [32m+[0m[0m forward              = []
                          [32m+[0m[0m order                = (known after apply)
                          [32m+[0m[0m redirect             = []
                          [32m+[0m[0m target_group_arn     = (known after apply)
                          [32m+[0m[0m type                 = "forward"
                        },
                    ]
                  [32m+[0m[0m id                       = (known after apply)
                  [32m+[0m[0m load_balancer_arn        = (known after apply)
                  [32m+[0m[0m mutual_authentication    = (known after apply)
                  [32m+[0m[0m port                     = 80
                  [32m+[0m[0m protocol                 = "HTTP"
                  [32m+[0m[0m ssl_policy               = (known after apply)
                  [32m+[0m[0m tags                     = {
                      [32m+[0m[0m "alb:type"            = "app-nodejs"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m tags_all                 = {
                      [32m+[0m[0m "alb:type"            = "app-nodejs"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m tcp_idle_timeout_seconds = (known after apply)
                  [32m+[0m[0m timeouts                 = [90mnull[0m[0m
                }
            }
          [32m+[0m[0m route53_records    = {}
          [32m+[0m[0m security_group_arn = (known after apply)
          [32m+[0m[0m security_group_id  = (known after apply)
          [32m+[0m[0m target_groups      = {
              [32m+[0m[0m ex_asg = {
                  [32m+[0m[0m arn                                = (known after apply)
                  [32m+[0m[0m arn_suffix                         = (known after apply)
                  [32m+[0m[0m connection_termination             = (known after apply)
                  [32m+[0m[0m deregistration_delay               = "15"
                  [32m+[0m[0m health_check                       = (known after apply)
                  [32m+[0m[0m id                                 = (known after apply)
                  [32m+[0m[0m ip_address_type                    = (known after apply)
                  [32m+[0m[0m lambda_multi_value_headers_enabled = false
                  [32m+[0m[0m load_balancer_arns                 = (known after apply)
                  [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
                  [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
                  [32m+[0m[0m load_balancing_cross_zone_enabled  = "true"
                  [32m+[0m[0m name                               = "stage-us-app-nodejs"
                  [32m+[0m[0m name_prefix                        = (known after apply)
                  [32m+[0m[0m port                               = 8080
                  [32m+[0m[0m preserve_client_ip                 = (known after apply)
                  [32m+[0m[0m protocol                           = "HTTP"
                  [32m+[0m[0m protocol_version                   = (known after apply)
                  [32m+[0m[0m proxy_protocol_v2                  = false
                  [32m+[0m[0m slow_start                         = 0
                  [32m+[0m[0m stickiness                         = (known after apply)
                  [32m+[0m[0m tags                               = {
                      [32m+[0m[0m "alb:type"            = "app-nodejs"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m tags_all                           = {
                      [32m+[0m[0m "alb:type"            = "app-nodejs"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m target_failover                    = (known after apply)
                  [32m+[0m[0m target_group_health                = (known after apply)
                  [32m+[0m[0m target_health_state                = (known after apply)
                  [32m+[0m[0m target_type                        = "instance"
                  [32m+[0m[0m vpc_id                             = "vpc-0bb3c37fbc7b017c9"
                }
            }
          [32m+[0m[0m zone_id            = (known after apply)
        }
      [32m+[0m[0m app-web    = {
          [32m+[0m[0m arn                = (known after apply)
          [32m+[0m[0m arn_suffix         = (known after apply)
          [32m+[0m[0m dns_name           = (known after apply)
          [32m+[0m[0m id                 = (known after apply)
          [32m+[0m[0m listener_rules     = {}
          [32m+[0m[0m listeners          = {
              [32m+[0m[0m ex_http = {
                  [32m+[0m[0m alpn_policy              = [90mnull[0m[0m
                  [32m+[0m[0m arn                      = (known after apply)
                  [32m+[0m[0m certificate_arn          = [90mnull[0m[0m
                  [32m+[0m[0m default_action           = [
                      [32m+[0m[0m {
                          [32m+[0m[0m authenticate_cognito = []
                          [32m+[0m[0m authenticate_oidc    = []
                          [32m+[0m[0m fixed_response       = []
                          [32m+[0m[0m forward              = []
                          [32m+[0m[0m order                = (known after apply)
                          [32m+[0m[0m redirect             = []
                          [32m+[0m[0m target_group_arn     = (known after apply)
                          [32m+[0m[0m type                 = "forward"
                        },
                    ]
                  [32m+[0m[0m id                       = (known after apply)
                  [32m+[0m[0m load_balancer_arn        = (known after apply)
                  [32m+[0m[0m mutual_authentication    = (known after apply)
                  [32m+[0m[0m port                     = 80
                  [32m+[0m[0m protocol                 = "HTTP"
                  [32m+[0m[0m ssl_policy               = (known after apply)
                  [32m+[0m[0m tags                     = {
                      [32m+[0m[0m "alb:type"            = "app-web"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m tags_all                 = {
                      [32m+[0m[0m "alb:type"            = "app-web"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m tcp_idle_timeout_seconds = (known after apply)
                  [32m+[0m[0m timeouts                 = [90mnull[0m[0m
                }
            }
          [32m+[0m[0m route53_records    = {}
          [32m+[0m[0m security_group_arn = (known after apply)
          [32m+[0m[0m security_group_id  = (known after apply)
          [32m+[0m[0m target_groups      = {
              [32m+[0m[0m ex_asg = {
                  [32m+[0m[0m arn                                = (known after apply)
                  [32m+[0m[0m arn_suffix                         = (known after apply)
                  [32m+[0m[0m connection_termination             = (known after apply)
                  [32m+[0m[0m deregistration_delay               = "15"
                  [32m+[0m[0m health_check                       = (known after apply)
                  [32m+[0m[0m id                                 = (known after apply)
                  [32m+[0m[0m ip_address_type                    = (known after apply)
                  [32m+[0m[0m lambda_multi_value_headers_enabled = false
                  [32m+[0m[0m load_balancer_arns                 = (known after apply)
                  [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
                  [32m+[0m[0m load_balancing_anomaly_mitigation  = (known after apply)
                  [32m+[0m[0m load_balancing_cross_zone_enabled  = "true"
                  [32m+[0m[0m name                               = "stage-us-app-web"
                  [32m+[0m[0m name_prefix                        = (known after apply)
                  [32m+[0m[0m port                               = 8080
                  [32m+[0m[0m preserve_client_ip                 = (known after apply)
                  [32m+[0m[0m protocol                           = "HTTP"
                  [32m+[0m[0m protocol_version                   = (known after apply)
                  [32m+[0m[0m proxy_protocol_v2                  = false
                  [32m+[0m[0m slow_start                         = 0
                  [32m+[0m[0m stickiness                         = (known after apply)
                  [32m+[0m[0m tags                               = {
                      [32m+[0m[0m "alb:type"            = "app-web"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m tags_all                           = {
                      [32m+[0m[0m "alb:type"            = "app-web"
                      [32m+[0m[0m "deploy:by"           = "terraform"
                      [32m+[0m[0m "deploy:repository"   = "ie-infra/ie-infra-aws-us"
                      [32m+[0m[0m terraform-aws-modules = "alb"
                      [32m+[0m[0m "terraform:module"    = "alb"
                    }
                  [32m+[0m[0m target_failover                    = (known after apply)
                  [32m+[0m[0m target_group_health                = (known after apply)
                  [32m+[0m[0m target_health_state                = (known after apply)
                  [32m+[0m[0m target_type                        = "instance"
                  [32m+[0m[0m vpc_id                             = "vpc-0bb3c37fbc7b017c9"
                }
            }
          [32m+[0m[0m zone_id            = (known after apply)
        }
    }
  [33m~[0m[0m asg                 = {
      [31m-[0m[0m app        = {
          [31m-[0m[0m autoscaling_group_arn                       = "arn:aws:autoscaling:us-west-2:539247459406:autoScalingGroup:d7cd1ab5-27fb-4117-8b2e-4d0814224730:autoScalingGroupName/stage-us-app-asg"
          [31m-[0m[0m autoscaling_group_availability_zones        = [
              [31m-[0m[0m "us-west-2a",
              [31m-[0m[0m "us-west-2b",
              [31m-[0m[0m "us-west-2c",
            ]
          [31m-[0m[0m autoscaling_group_default_cooldown          = 300
          [31m-[0m[0m autoscaling_group_desired_capacity          = 1
          [31m-[0m[0m autoscaling_group_enabled_metrics           = []
          [31m-[0m[0m autoscaling_group_health_check_grace_period = 300
          [31m-[0m[0m autoscaling_group_health_check_type         = "EC2"
          [31m-[0m[0m autoscaling_group_id                        = "stage-us-app-asg"
          [31m-[0m[0m autoscaling_group_load_balancers            = []
          [31m-[0m[0m autoscaling_group_max_size                  = 1
          [31m-[0m[0m autoscaling_group_min_size                  = 1
          [31m-[0m[0m autoscaling_group_name                      = "stage-us-app-asg"
          [31m-[0m[0m autoscaling_group_target_group_arns         = [
              [31m-[0m[0m "arn:aws:elasticloadbalancing:us-west-2:539247459406:targetgroup/stage-us-app/557d879b77d78796",
            ]
          [31m-[0m[0m autoscaling_group_vpc_zone_identifier       = [
              [31m-[0m[0m "subnet-01b8ddbe2f30a7e6f",
              [31m-[0m[0m "subnet-02c20ec4e8fbc2750",
              [31m-[0m[0m "subnet-066bf555f889cd8f3",
            ]
          [31m-[0m[0m autoscaling_policy_arns                     = {}
          [31m-[0m[0m autoscaling_schedule_arns                   = {}
          [31m-[0m[0m iam_instance_profile_arn                    = "arn:aws:iam::539247459406:instance-profile/ec2/stage-us-app-asg-node"
          [31m-[0m[0m iam_instance_profile_id                     = "stage-us-app-asg-node"
          [31m-[0m[0m iam_instance_profile_unique                 = "AIPAX3DNHHRHOTIBIJFCW"
          [31m-[0m[0m iam_role_arn                                = "arn:aws:iam::539247459406:role/ec2/stage-us-app-asg-node"
          [31m-[0m[0m iam_role_name                               = "stage-us-app-asg-node"
          [31m-[0m[0m iam_role_unique_id                          = "AROAX3DNHHRHPI36INONB"
          [31m-[0m[0m launch_template_arn                         = "arn:aws:ec2:us-west-2:539247459406:launch-template/lt-0a18366e7efd10a25"
          [31m-[0m[0m launch_template_default_version             = 9
          [31m-[0m[0m launch_template_id                          = "lt-0a18366e7efd10a25"
          [31m-[0m[0m launch_template_latest_version              = 9
          [31m-[0m[0m launch_template_name                        = "stage-us-app-asg-lt-20250104095219225200000004"
        }
      [32m+[0m[0m app-nodejs = {
          [32m+[0m[0m autoscaling_group_arn                       = (known after apply)
          [32m+[0m[0m autoscaling_group_availability_zones        = (known after apply)
          [32m+[0m[0m autoscaling_group_default_cooldown          = (known after apply)
          [32m+[0m[0m autoscaling_group_desired_capacity          = 1
          [32m+[0m[0m autoscaling_group_enabled_metrics           = [90mnull[0m[0m
          [32m+[0m[0m autoscaling_group_health_check_grace_period = 300
          [32m+[0m[0m autoscaling_group_health_check_type         = "EC2"
          [32m+[0m[0m autoscaling_group_id                        = (known after apply)
          [32m+[0m[0m autoscaling_group_load_balancers            = (known after apply)
          [32m+[0m[0m autoscaling_group_max_size                  = 1
          [32m+[0m[0m autoscaling_group_min_size                  = 1
          [32m+[0m[0m autoscaling_group_name                      = "stage-us-app-nodejs-asg"
          [32m+[0m[0m autoscaling_group_target_group_arns         = (known after apply)
          [32m+[0m[0m autoscaling_group_vpc_zone_identifier       = [
              [32m+[0m[0m "subnet-01b8ddbe2f30a7e6f",
              [32m+[0m[0m "subnet-02c20ec4e8fbc2750",
              [32m+[0m[0m "subnet-066bf555f889cd8f3",
            ]
          [32m+[0m[0m autoscaling_policy_arns                     = {}
          [32m+[0m[0m autoscaling_schedule_arns                   = {}
          [32m+[0m[0m iam_instance_profile_arn                    = (known after apply)
          [32m+[0m[0m iam_instance_profile_id                     = (known after apply)
          [32m+[0m[0m iam_instance_profile_unique                 = (known after apply)
          [32m+[0m[0m iam_role_arn                                = (known after apply)
          [32m+[0m[0m iam_role_name                               = "stage-us-app-nodejs-asg-node"
          [32m+[0m[0m iam_role_unique_id                          = (known after apply)
          [32m+[0m[0m launch_template_arn                         = (known after apply)
          [32m+[0m[0m launch_template_default_version             = (known after apply)
          [32m+[0m[0m launch_template_id                          = (known after apply)
          [32m+[0m[0m launch_template_latest_version              = (known after apply)
          [32m+[0m[0m launch_template_name                        = (known after apply)
        }
      [32m+[0m[0m app-web    = {
          [32m+[0m[0m autoscaling_group_arn                       = (known after apply)
          [32m+[0m[0m autoscaling_group_availability_zones        = (known after apply)
          [32m+[0m[0m autoscaling_group_default_cooldown          = (known after apply)
          [32m+[0m[0m autoscaling_group_desired_capacity          = 1
          [32m+[0m[0m autoscaling_group_enabled_metrics           = [90mnull[0m[0m
          [32m+[0m[0m autoscaling_group_health_check_grace_period = 300
          [32m+[0m[0m autoscaling_group_health_check_type         = "EC2"
          [32m+[0m[0m autoscaling_group_id                        = (known after apply)
          [32m+[0m[0m autoscaling_group_load_balancers            = (known after apply)
          [32m+[0m[0m autoscaling_group_max_size                  = 1
          [32m+[0m[0m autoscaling_group_min_size                  = 1
          [32m+[0m[0m autoscaling_group_name                      = "stage-us-app-web-asg"
          [32m+[0m[0m autoscaling_group_target_group_arns         = (known after apply)
          [32m+[0m[0m autoscaling_group_vpc_zone_identifier       = [
              [32m+[0m[0m "subnet-01b8ddbe2f30a7e6f",
              [32m+[0m[0m "subnet-02c20ec4e8fbc2750",
              [32m+[0m[0m "subnet-066bf555f889cd8f3",
            ]
          [32m+[0m[0m autoscaling_policy_arns                     = {}
          [32m+[0m[0m autoscaling_schedule_arns                   = {}
          [32m+[0m[0m iam_instance_profile_arn                    = (known after apply)
          [32m+[0m[0m iam_instance_profile_id                     = (known after apply)
          [32m+[0m[0m iam_instance_profile_unique                 = (known after apply)
          [32m+[0m[0m iam_role_arn                                = (known after apply)
          [32m+[0m[0m iam_role_name                               = "stage-us-app-web-asg-node"
          [32m+[0m[0m iam_role_unique_id                          = (known after apply)
          [32m+[0m[0m launch_template_arn                         = (known after apply)
          [32m+[0m[0m launch_template_default_version             = (known after apply)
          [32m+[0m[0m launch_template_id                          = (known after apply)
          [32m+[0m[0m launch_template_latest_version              = (known after apply)
          [32m+[0m[0m launch_template_name                        = (known after apply)
        }
    }
  [33m~[0m[0m asg_ssh_private_key = (sensitive value)
  [32m+[0m[0m s3_bucket           = {
      [32m+[0m[0m ipx_prod          = {
          [32m+[0m[0m s3_bucket_arn                           = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_domain_name            = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_regional_domain_name   = (known after apply)
          [32m+[0m[0m s3_bucket_hosted_zone_id                = (known after apply)
          [32m+[0m[0m s3_bucket_id                            = (known after apply)
          [32m+[0m[0m s3_bucket_lifecycle_configuration_rules = (known after apply)
          [32m+[0m[0m s3_bucket_policy                        = ""
          [32m+[0m[0m s3_bucket_region                        = (known after apply)
          [32m+[0m[0m s3_bucket_website_domain                = ""
          [32m+[0m[0m s3_bucket_website_endpoint              = ""
        }
      [32m+[0m[0m ipx_prod_backups  = {
          [32m+[0m[0m s3_bucket_arn                           = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_domain_name            = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_regional_domain_name   = (known after apply)
          [32m+[0m[0m s3_bucket_hosted_zone_id                = (known after apply)
          [32m+[0m[0m s3_bucket_id                            = (known after apply)
          [32m+[0m[0m s3_bucket_lifecycle_configuration_rules = (known after apply)
          [32m+[0m[0m s3_bucket_policy                        = ""
          [32m+[0m[0m s3_bucket_region                        = (known after apply)
          [32m+[0m[0m s3_bucket_website_domain                = ""
          [32m+[0m[0m s3_bucket_website_endpoint              = ""
        }
      [32m+[0m[0m ipx_prod_cldfiles = {
          [32m+[0m[0m s3_bucket_arn                           = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_domain_name            = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_regional_domain_name   = (known after apply)
          [32m+[0m[0m s3_bucket_hosted_zone_id                = (known after apply)
          [32m+[0m[0m s3_bucket_id                            = (known after apply)
          [32m+[0m[0m s3_bucket_lifecycle_configuration_rules = (known after apply)
          [32m+[0m[0m s3_bucket_policy                        = ""
          [32m+[0m[0m s3_bucket_region                        = (known after apply)
          [32m+[0m[0m s3_bucket_website_domain                = ""
          [32m+[0m[0m s3_bucket_website_endpoint              = ""
        }
      [32m+[0m[0m ipx_prod_sync     = {
          [32m+[0m[0m s3_bucket_arn                           = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_domain_name            = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_regional_domain_name   = (known after apply)
          [32m+[0m[0m s3_bucket_hosted_zone_id                = (known after apply)
          [32m+[0m[0m s3_bucket_id                            = (known after apply)
          [32m+[0m[0m s3_bucket_lifecycle_configuration_rules = (known after apply)
          [32m+[0m[0m s3_bucket_policy                        = ""
          [32m+[0m[0m s3_bucket_region                        = (known after apply)
          [32m+[0m[0m s3_bucket_website_domain                = ""
          [32m+[0m[0m s3_bucket_website_endpoint              = ""
        }
      [32m+[0m[0m ipx_prod_transit  = {
          [32m+[0m[0m s3_bucket_arn                           = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_domain_name            = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_regional_domain_name   = (known after apply)
          [32m+[0m[0m s3_bucket_hosted_zone_id                = (known after apply)
          [32m+[0m[0m s3_bucket_id                            = (known after apply)
          [32m+[0m[0m s3_bucket_lifecycle_configuration_rules = (known after apply)
          [32m+[0m[0m s3_bucket_policy                        = ""
          [32m+[0m[0m s3_bucket_region                        = (known after apply)
          [32m+[0m[0m s3_bucket_website_domain                = ""
          [32m+[0m[0m s3_bucket_website_endpoint              = ""
        }
      [32m+[0m[0m ipx_saleswebsite  = {
          [32m+[0m[0m s3_bucket_arn                           = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_domain_name            = (known after apply)
          [32m+[0m[0m s3_bucket_bucket_regional_domain_name   = (known after apply)
          [32m+[0m[0m s3_bucket_hosted_zone_id                = (known after apply)
          [32m+[0m[0m s3_bucket_id                            = (known after apply)
          [32m+[0m[0m s3_bucket_lifecycle_configuration_rules = (known after apply)
          [32m+[0m[0m s3_bucket_policy                        = ""
          [32m+[0m[0m s3_bucket_region                        = (known after apply)
          [32m+[0m[0m s3_bucket_website_domain                = ""
          [32m+[0m[0m s3_bucket_website_endpoint              = ""
        }
    }
[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
Releasing state lock. This may take a few moments...
Run terraform -chdir=./infra plan -var-file=../env/us/stage.tfvars
Acquiring state lock. This may take a few moments...
Releasing state lock. This may take a few moments...
