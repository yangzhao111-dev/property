name: Terraform CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  AWS_PROFILE: ipe-rootdeployer
  COUNTRY: us
  ENVIRONMENT: stage
  AWS_SDK_LOAD_CONFIG: "false"        # 强制走 secrets，不加载 profile 文件

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.6.6'
# trigger 
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Inject AWS CLI profile for Terraform
        run: |
          mkdir -p ~/.aws
          echo "[${{ env.AWS_PROFILE }}]" > ~/.aws/config
          echo "region = ${{ env.AWS_REGION }}" >> ~/.aws/config
          echo "[${{ env.AWS_PROFILE }}]" > ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make unzip

      - name: Terraform Init
        run: make init AWS_PROFILE=${{ env.AWS_PROFILE }} COUNTRY=${{ env.COUNTRY }} ENVIRONMENT=${{ env.ENVIRONMENT }}

      - name: Terraform Plan
        run: make plan AWS_PROFILE=${{ env.AWS_PROFILE }} COUNTRY=${{ env.COUNTRY }} ENVIRONMENT=${{ env.ENVIRONMENT }}

      - name: Terraform Output
        run: make output AWS_PROFILE=${{ env.AWS_PROFILE }} COUNTRY=${{ env.COUNTRY }} ENVIRONMENT=${{ env.ENVIRONMENT }}  

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: make apply AWS_PROFILE=${{ env.AWS_PROFILE }} COUNTRY=${{ env.COUNTRY }} ENVIRONMENT=${{ env.ENVIRONMENT }} APPROVE=true